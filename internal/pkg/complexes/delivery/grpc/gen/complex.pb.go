// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.1
// 	protoc        v5.26.1
// source: complex.proto

package gen

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ClassHouse int32

const (
	ClassHouse_CLASS_HOUSE_ECONOM   ClassHouse = 0
	ClassHouse_CLASS_HOUSE_COMFORT  ClassHouse = 1
	ClassHouse_CLASS_HOUSE_BUSINESS ClassHouse = 2
	ClassHouse_CLASS_HOUSE_PREMIUM  ClassHouse = 3
	ClassHouse_CLASS_HOUSE_ELITE    ClassHouse = 4
)

// Enum value maps for ClassHouse.
var (
	ClassHouse_name = map[int32]string{
		0: "CLASS_HOUSE_ECONOM",
		1: "CLASS_HOUSE_COMFORT",
		2: "CLASS_HOUSE_BUSINESS",
		3: "CLASS_HOUSE_PREMIUM",
		4: "CLASS_HOUSE_ELITE",
	}
	ClassHouse_value = map[string]int32{
		"CLASS_HOUSE_ECONOM":   0,
		"CLASS_HOUSE_COMFORT":  1,
		"CLASS_HOUSE_BUSINESS": 2,
		"CLASS_HOUSE_PREMIUM":  3,
		"CLASS_HOUSE_ELITE":    4,
	}
)

func (x ClassHouse) Enum() *ClassHouse {
	p := new(ClassHouse)
	*p = x
	return p
}

func (x ClassHouse) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ClassHouse) Descriptor() protoreflect.EnumDescriptor {
	return file_complex_proto_enumTypes[0].Descriptor()
}

func (ClassHouse) Type() protoreflect.EnumType {
	return &file_complex_proto_enumTypes[0]
}

func (x ClassHouse) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ClassHouse.Descriptor instead.
func (ClassHouse) EnumDescriptor() ([]byte, []int) {
	return file_complex_proto_rawDescGZIP(), []int{0}
}

type CreateCompanyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name        string `protobuf:"bytes,1,opt,name=Name,proto3" json:"Name,omitempty"`
	YearFounded int32  `protobuf:"varint,2,opt,name=YearFounded,proto3" json:"YearFounded,omitempty"`
	Phone       string `protobuf:"bytes,3,opt,name=Phone,proto3" json:"Phone,omitempty"`
	Description string `protobuf:"bytes,4,opt,name=Description,proto3" json:"Description,omitempty"`
}

func (x *CreateCompanyRequest) Reset() {
	*x = CreateCompanyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_complex_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateCompanyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCompanyRequest) ProtoMessage() {}

func (x *CreateCompanyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_complex_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCompanyRequest.ProtoReflect.Descriptor instead.
func (*CreateCompanyRequest) Descriptor() ([]byte, []int) {
	return file_complex_proto_rawDescGZIP(), []int{0}
}

func (x *CreateCompanyRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateCompanyRequest) GetYearFounded() int32 {
	if x != nil {
		return x.YearFounded
	}
	return 0
}

func (x *CreateCompanyRequest) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *CreateCompanyRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type CreateCompanyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           int64  `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
	Name         string `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty"`
	Photo        string `protobuf:"bytes,3,opt,name=Photo,proto3" json:"Photo,omitempty"`
	YearFounded  int32  `protobuf:"varint,4,opt,name=YearFounded,proto3" json:"YearFounded,omitempty"`
	Phone        string `protobuf:"bytes,5,opt,name=Phone,proto3" json:"Phone,omitempty"`
	Description  string `protobuf:"bytes,6,opt,name=Description,proto3" json:"Description,omitempty"`
	DateCreation string `protobuf:"bytes,7,opt,name=DateCreation,proto3" json:"DateCreation,omitempty"`
	IsDeleted    string `protobuf:"bytes,8,opt,name=IsDeleted,proto3" json:"IsDeleted,omitempty"`
}

func (x *CreateCompanyResponse) Reset() {
	*x = CreateCompanyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_complex_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateCompanyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCompanyResponse) ProtoMessage() {}

func (x *CreateCompanyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_complex_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCompanyResponse.ProtoReflect.Descriptor instead.
func (*CreateCompanyResponse) Descriptor() ([]byte, []int) {
	return file_complex_proto_rawDescGZIP(), []int{1}
}

func (x *CreateCompanyResponse) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CreateCompanyResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateCompanyResponse) GetPhoto() string {
	if x != nil {
		return x.Photo
	}
	return ""
}

func (x *CreateCompanyResponse) GetYearFounded() int32 {
	if x != nil {
		return x.YearFounded
	}
	return 0
}

func (x *CreateCompanyResponse) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *CreateCompanyResponse) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *CreateCompanyResponse) GetDateCreation() string {
	if x != nil {
		return x.DateCreation
	}
	return ""
}

func (x *CreateCompanyResponse) GetIsDeleted() string {
	if x != nil {
		return x.IsDeleted
	}
	return ""
}

type GetCompanyByIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
}

func (x *GetCompanyByIdRequest) Reset() {
	*x = GetCompanyByIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_complex_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCompanyByIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCompanyByIdRequest) ProtoMessage() {}

func (x *GetCompanyByIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_complex_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCompanyByIdRequest.ProtoReflect.Descriptor instead.
func (*GetCompanyByIdRequest) Descriptor() ([]byte, []int) {
	return file_complex_proto_rawDescGZIP(), []int{2}
}

func (x *GetCompanyByIdRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type GetCompanyByIdResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          int64  `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
	Name        string `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty"`
	Photo       string `protobuf:"bytes,3,opt,name=Photo,proto3" json:"Photo,omitempty"`
	YearFounded int32  `protobuf:"varint,4,opt,name=YearFounded,proto3" json:"YearFounded,omitempty"`
	Phone       string `protobuf:"bytes,5,opt,name=Phone,proto3" json:"Phone,omitempty"`
	Description string `protobuf:"bytes,6,opt,name=Description,proto3" json:"Description,omitempty"`
}

func (x *GetCompanyByIdResponse) Reset() {
	*x = GetCompanyByIdResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_complex_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCompanyByIdResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCompanyByIdResponse) ProtoMessage() {}

func (x *GetCompanyByIdResponse) ProtoReflect() protoreflect.Message {
	mi := &file_complex_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCompanyByIdResponse.ProtoReflect.Descriptor instead.
func (*GetCompanyByIdResponse) Descriptor() ([]byte, []int) {
	return file_complex_proto_rawDescGZIP(), []int{3}
}

func (x *GetCompanyByIdResponse) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *GetCompanyByIdResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetCompanyByIdResponse) GetPhoto() string {
	if x != nil {
		return x.Photo
	}
	return ""
}

func (x *GetCompanyByIdResponse) GetYearFounded() int32 {
	if x != nil {
		return x.YearFounded
	}
	return 0
}

func (x *GetCompanyByIdResponse) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *GetCompanyByIdResponse) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type UpdateCompanyPhotoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	File      []byte `protobuf:"bytes,1,opt,name=File,proto3" json:"File,omitempty"`
	FileType  string `protobuf:"bytes,2,opt,name=FileType,proto3" json:"FileType,omitempty"`
	CompanyId int64  `protobuf:"varint,3,opt,name=CompanyId,proto3" json:"CompanyId,omitempty"`
}

func (x *UpdateCompanyPhotoRequest) Reset() {
	*x = UpdateCompanyPhotoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_complex_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateCompanyPhotoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCompanyPhotoRequest) ProtoMessage() {}

func (x *UpdateCompanyPhotoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_complex_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCompanyPhotoRequest.ProtoReflect.Descriptor instead.
func (*UpdateCompanyPhotoRequest) Descriptor() ([]byte, []int) {
	return file_complex_proto_rawDescGZIP(), []int{4}
}

func (x *UpdateCompanyPhotoRequest) GetFile() []byte {
	if x != nil {
		return x.File
	}
	return nil
}

func (x *UpdateCompanyPhotoRequest) GetFileType() string {
	if x != nil {
		return x.FileType
	}
	return ""
}

func (x *UpdateCompanyPhotoRequest) GetCompanyId() int64 {
	if x != nil {
		return x.CompanyId
	}
	return 0
}

type UpdateCompanyPhotoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Filename string `protobuf:"bytes,1,opt,name=Filename,proto3" json:"Filename,omitempty"`
}

func (x *UpdateCompanyPhotoResponse) Reset() {
	*x = UpdateCompanyPhotoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_complex_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateCompanyPhotoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCompanyPhotoResponse) ProtoMessage() {}

func (x *UpdateCompanyPhotoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_complex_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCompanyPhotoResponse.ProtoReflect.Descriptor instead.
func (*UpdateCompanyPhotoResponse) Descriptor() ([]byte, []int) {
	return file_complex_proto_rawDescGZIP(), []int{5}
}

func (x *UpdateCompanyPhotoResponse) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

type CreateComplexRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CompanyId              int64      `protobuf:"varint,1,opt,name=CompanyId,proto3" json:"CompanyId,omitempty"`
	Name                   string     `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty"`
	Address                string     `protobuf:"bytes,3,opt,name=Address,proto3" json:"Address,omitempty"`
	Description            string     `protobuf:"bytes,4,opt,name=Description,proto3" json:"Description,omitempty"`
	DateBeginBuild         string     `protobuf:"bytes,5,opt,name=DateBeginBuild,proto3" json:"DateBeginBuild,omitempty"`
	DateEndBuild           string     `protobuf:"bytes,6,opt,name=DateEndBuild,proto3" json:"DateEndBuild,omitempty"`
	WithoutFinishingOption bool       `protobuf:"varint,7,opt,name=WithoutFinishingOption,proto3" json:"WithoutFinishingOption,omitempty"`
	FinishingOption        bool       `protobuf:"varint,8,opt,name=FinishingOption,proto3" json:"FinishingOption,omitempty"`
	PreFinishingOption     bool       `protobuf:"varint,9,opt,name=PreFinishingOption,proto3" json:"PreFinishingOption,omitempty"`
	ClassHousing           ClassHouse `protobuf:"varint,10,opt,name=ClassHousing,proto3,enum=complex.ClassHouse" json:"ClassHousing,omitempty"`
	Parking                bool       `protobuf:"varint,11,opt,name=Parking,proto3" json:"Parking,omitempty"`
	Security               bool       `protobuf:"varint,12,opt,name=Security,proto3" json:"Security,omitempty"`
}

func (x *CreateComplexRequest) Reset() {
	*x = CreateComplexRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_complex_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateComplexRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateComplexRequest) ProtoMessage() {}

func (x *CreateComplexRequest) ProtoReflect() protoreflect.Message {
	mi := &file_complex_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateComplexRequest.ProtoReflect.Descriptor instead.
func (*CreateComplexRequest) Descriptor() ([]byte, []int) {
	return file_complex_proto_rawDescGZIP(), []int{6}
}

func (x *CreateComplexRequest) GetCompanyId() int64 {
	if x != nil {
		return x.CompanyId
	}
	return 0
}

func (x *CreateComplexRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateComplexRequest) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *CreateComplexRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *CreateComplexRequest) GetDateBeginBuild() string {
	if x != nil {
		return x.DateBeginBuild
	}
	return ""
}

func (x *CreateComplexRequest) GetDateEndBuild() string {
	if x != nil {
		return x.DateEndBuild
	}
	return ""
}

func (x *CreateComplexRequest) GetWithoutFinishingOption() bool {
	if x != nil {
		return x.WithoutFinishingOption
	}
	return false
}

func (x *CreateComplexRequest) GetFinishingOption() bool {
	if x != nil {
		return x.FinishingOption
	}
	return false
}

func (x *CreateComplexRequest) GetPreFinishingOption() bool {
	if x != nil {
		return x.PreFinishingOption
	}
	return false
}

func (x *CreateComplexRequest) GetClassHousing() ClassHouse {
	if x != nil {
		return x.ClassHousing
	}
	return ClassHouse_CLASS_HOUSE_ECONOM
}

func (x *CreateComplexRequest) GetParking() bool {
	if x != nil {
		return x.Parking
	}
	return false
}

func (x *CreateComplexRequest) GetSecurity() bool {
	if x != nil {
		return x.Security
	}
	return false
}

type CreateComplexResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                     int64      `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
	CompanyId              int64      `protobuf:"varint,2,opt,name=CompanyId,proto3" json:"CompanyId,omitempty"`
	Name                   string     `protobuf:"bytes,3,opt,name=Name,proto3" json:"Name,omitempty"`
	Address                string     `protobuf:"bytes,4,opt,name=Address,proto3" json:"Address,omitempty"`
	Photo                  string     `protobuf:"bytes,5,opt,name=Photo,proto3" json:"Photo,omitempty"`
	Description            string     `protobuf:"bytes,6,opt,name=Description,proto3" json:"Description,omitempty"`
	DateBeginBuild         string     `protobuf:"bytes,7,opt,name=DateBeginBuild,proto3" json:"DateBeginBuild,omitempty"`
	DateEndBuild           string     `protobuf:"bytes,8,opt,name=DateEndBuild,proto3" json:"DateEndBuild,omitempty"`
	WithoutFinishingOption bool       `protobuf:"varint,9,opt,name=WithoutFinishingOption,proto3" json:"WithoutFinishingOption,omitempty"`
	FinishingOption        bool       `protobuf:"varint,10,opt,name=FinishingOption,proto3" json:"FinishingOption,omitempty"`
	PreFinishingOption     bool       `protobuf:"varint,11,opt,name=PreFinishingOption,proto3" json:"PreFinishingOption,omitempty"`
	ClassHousing           ClassHouse `protobuf:"varint,12,opt,name=ClassHousing,proto3,enum=complex.ClassHouse" json:"ClassHousing,omitempty"`
	Parking                bool       `protobuf:"varint,13,opt,name=Parking,proto3" json:"Parking,omitempty"`
	Security               bool       `protobuf:"varint,14,opt,name=Security,proto3" json:"Security,omitempty"`
	DateCreation           string     `protobuf:"bytes,15,opt,name=DateCreation,proto3" json:"DateCreation,omitempty"`
	IsDeleted              bool       `protobuf:"varint,16,opt,name=IsDeleted,proto3" json:"IsDeleted,omitempty"`
}

func (x *CreateComplexResponse) Reset() {
	*x = CreateComplexResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_complex_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateComplexResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateComplexResponse) ProtoMessage() {}

func (x *CreateComplexResponse) ProtoReflect() protoreflect.Message {
	mi := &file_complex_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateComplexResponse.ProtoReflect.Descriptor instead.
func (*CreateComplexResponse) Descriptor() ([]byte, []int) {
	return file_complex_proto_rawDescGZIP(), []int{7}
}

func (x *CreateComplexResponse) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CreateComplexResponse) GetCompanyId() int64 {
	if x != nil {
		return x.CompanyId
	}
	return 0
}

func (x *CreateComplexResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateComplexResponse) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *CreateComplexResponse) GetPhoto() string {
	if x != nil {
		return x.Photo
	}
	return ""
}

func (x *CreateComplexResponse) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *CreateComplexResponse) GetDateBeginBuild() string {
	if x != nil {
		return x.DateBeginBuild
	}
	return ""
}

func (x *CreateComplexResponse) GetDateEndBuild() string {
	if x != nil {
		return x.DateEndBuild
	}
	return ""
}

func (x *CreateComplexResponse) GetWithoutFinishingOption() bool {
	if x != nil {
		return x.WithoutFinishingOption
	}
	return false
}

func (x *CreateComplexResponse) GetFinishingOption() bool {
	if x != nil {
		return x.FinishingOption
	}
	return false
}

func (x *CreateComplexResponse) GetPreFinishingOption() bool {
	if x != nil {
		return x.PreFinishingOption
	}
	return false
}

func (x *CreateComplexResponse) GetClassHousing() ClassHouse {
	if x != nil {
		return x.ClassHousing
	}
	return ClassHouse_CLASS_HOUSE_ECONOM
}

func (x *CreateComplexResponse) GetParking() bool {
	if x != nil {
		return x.Parking
	}
	return false
}

func (x *CreateComplexResponse) GetSecurity() bool {
	if x != nil {
		return x.Security
	}
	return false
}

func (x *CreateComplexResponse) GetDateCreation() string {
	if x != nil {
		return x.DateCreation
	}
	return ""
}

func (x *CreateComplexResponse) GetIsDeleted() bool {
	if x != nil {
		return x.IsDeleted
	}
	return false
}

type GetComplexByIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
}

func (x *GetComplexByIdRequest) Reset() {
	*x = GetComplexByIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_complex_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetComplexByIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetComplexByIdRequest) ProtoMessage() {}

func (x *GetComplexByIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_complex_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetComplexByIdRequest.ProtoReflect.Descriptor instead.
func (*GetComplexByIdRequest) Descriptor() ([]byte, []int) {
	return file_complex_proto_rawDescGZIP(), []int{8}
}

func (x *GetComplexByIdRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type GetComplexByIdResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                     int64      `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
	CompanyId              int64      `protobuf:"varint,2,opt,name=CompanyId,proto3" json:"CompanyId,omitempty"`
	Name                   string     `protobuf:"bytes,3,opt,name=Name,proto3" json:"Name,omitempty"`
	Address                string     `protobuf:"bytes,4,opt,name=Address,proto3" json:"Address,omitempty"`
	Photo                  string     `protobuf:"bytes,5,opt,name=Photo,proto3" json:"Photo,omitempty"`
	Description            string     `protobuf:"bytes,6,opt,name=Description,proto3" json:"Description,omitempty"`
	DateBeginBuild         string     `protobuf:"bytes,7,opt,name=DateBeginBuild,proto3" json:"DateBeginBuild,omitempty"`
	DateEndBuild           string     `protobuf:"bytes,8,opt,name=DateEndBuild,proto3" json:"DateEndBuild,omitempty"`
	WithoutFinishingOption bool       `protobuf:"varint,9,opt,name=WithoutFinishingOption,proto3" json:"WithoutFinishingOption,omitempty"`
	FinishingOption        bool       `protobuf:"varint,10,opt,name=FinishingOption,proto3" json:"FinishingOption,omitempty"`
	PreFinishingOption     bool       `protobuf:"varint,11,opt,name=PreFinishingOption,proto3" json:"PreFinishingOption,omitempty"`
	ClassHousing           ClassHouse `protobuf:"varint,12,opt,name=ClassHousing,proto3,enum=complex.ClassHouse" json:"ClassHousing,omitempty"`
	Parking                bool       `protobuf:"varint,13,opt,name=Parking,proto3" json:"Parking,omitempty"`
	Security               bool       `protobuf:"varint,14,opt,name=Security,proto3" json:"Security,omitempty"`
}

func (x *GetComplexByIdResponse) Reset() {
	*x = GetComplexByIdResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_complex_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetComplexByIdResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetComplexByIdResponse) ProtoMessage() {}

func (x *GetComplexByIdResponse) ProtoReflect() protoreflect.Message {
	mi := &file_complex_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetComplexByIdResponse.ProtoReflect.Descriptor instead.
func (*GetComplexByIdResponse) Descriptor() ([]byte, []int) {
	return file_complex_proto_rawDescGZIP(), []int{9}
}

func (x *GetComplexByIdResponse) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *GetComplexByIdResponse) GetCompanyId() int64 {
	if x != nil {
		return x.CompanyId
	}
	return 0
}

func (x *GetComplexByIdResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetComplexByIdResponse) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *GetComplexByIdResponse) GetPhoto() string {
	if x != nil {
		return x.Photo
	}
	return ""
}

func (x *GetComplexByIdResponse) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *GetComplexByIdResponse) GetDateBeginBuild() string {
	if x != nil {
		return x.DateBeginBuild
	}
	return ""
}

func (x *GetComplexByIdResponse) GetDateEndBuild() string {
	if x != nil {
		return x.DateEndBuild
	}
	return ""
}

func (x *GetComplexByIdResponse) GetWithoutFinishingOption() bool {
	if x != nil {
		return x.WithoutFinishingOption
	}
	return false
}

func (x *GetComplexByIdResponse) GetFinishingOption() bool {
	if x != nil {
		return x.FinishingOption
	}
	return false
}

func (x *GetComplexByIdResponse) GetPreFinishingOption() bool {
	if x != nil {
		return x.PreFinishingOption
	}
	return false
}

func (x *GetComplexByIdResponse) GetClassHousing() ClassHouse {
	if x != nil {
		return x.ClassHousing
	}
	return ClassHouse_CLASS_HOUSE_ECONOM
}

func (x *GetComplexByIdResponse) GetParking() bool {
	if x != nil {
		return x.Parking
	}
	return false
}

func (x *GetComplexByIdResponse) GetSecurity() bool {
	if x != nil {
		return x.Security
	}
	return false
}

type UpdateComplexPhotoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	File      []byte `protobuf:"bytes,1,opt,name=File,proto3" json:"File,omitempty"`
	FileType  string `protobuf:"bytes,2,opt,name=FileType,proto3" json:"FileType,omitempty"`
	ComplexId int64  `protobuf:"varint,3,opt,name=ComplexId,proto3" json:"ComplexId,omitempty"`
}

func (x *UpdateComplexPhotoRequest) Reset() {
	*x = UpdateComplexPhotoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_complex_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateComplexPhotoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateComplexPhotoRequest) ProtoMessage() {}

func (x *UpdateComplexPhotoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_complex_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateComplexPhotoRequest.ProtoReflect.Descriptor instead.
func (*UpdateComplexPhotoRequest) Descriptor() ([]byte, []int) {
	return file_complex_proto_rawDescGZIP(), []int{10}
}

func (x *UpdateComplexPhotoRequest) GetFile() []byte {
	if x != nil {
		return x.File
	}
	return nil
}

func (x *UpdateComplexPhotoRequest) GetFileType() string {
	if x != nil {
		return x.FileType
	}
	return ""
}

func (x *UpdateComplexPhotoRequest) GetComplexId() int64 {
	if x != nil {
		return x.ComplexId
	}
	return 0
}

type UpdateComplexPhotoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Filename string `protobuf:"bytes,1,opt,name=Filename,proto3" json:"Filename,omitempty"`
}

func (x *UpdateComplexPhotoResponse) Reset() {
	*x = UpdateComplexPhotoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_complex_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateComplexPhotoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateComplexPhotoResponse) ProtoMessage() {}

func (x *UpdateComplexPhotoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_complex_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateComplexPhotoResponse.ProtoReflect.Descriptor instead.
func (*UpdateComplexPhotoResponse) Descriptor() ([]byte, []int) {
	return file_complex_proto_rawDescGZIP(), []int{11}
}

func (x *UpdateComplexPhotoResponse) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

var File_complex_proto protoreflect.FileDescriptor

var file_complex_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x78, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x07, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x78, 0x22, 0x84, 0x01, 0x0a, 0x14, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x59, 0x65, 0x61, 0x72, 0x46, 0x6f, 0x75,
	0x6e, 0x64, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x59, 0x65, 0x61, 0x72,
	0x46, 0x6f, 0x75, 0x6e, 0x64, 0x65, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x50, 0x68, 0x6f, 0x6e, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x20, 0x0a,
	0x0b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22,
	0xed, 0x01, 0x0a, 0x15, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e,
	0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x50, 0x68,
	0x6f, 0x74, 0x6f, 0x12, 0x20, 0x0a, 0x0b, 0x59, 0x65, 0x61, 0x72, 0x46, 0x6f, 0x75, 0x6e, 0x64,
	0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x59, 0x65, 0x61, 0x72, 0x46, 0x6f,
	0x75, 0x6e, 0x64, 0x65, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x44,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x22, 0x0a,
	0x0c, 0x44, 0x61, 0x74, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x44, 0x61, 0x74, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x49, 0x73, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x49, 0x73, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x22,
	0x27, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x42, 0x79, 0x49,
	0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x49, 0x64, 0x22, 0xac, 0x01, 0x0a, 0x16, 0x47, 0x65, 0x74,
	0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x02, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x50, 0x68, 0x6f, 0x74, 0x6f,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x12, 0x20, 0x0a,
	0x0b, 0x59, 0x65, 0x61, 0x72, 0x46, 0x6f, 0x75, 0x6e, 0x64, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0b, 0x59, 0x65, 0x61, 0x72, 0x46, 0x6f, 0x75, 0x6e, 0x64, 0x65, 0x64, 0x12,
	0x14, 0x0a, 0x05, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x50, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x44, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x69, 0x0a, 0x19, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x46, 0x69, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x04, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x46, 0x69, 0x6c, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x46, 0x69, 0x6c, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79,
	0x49, 0x64, 0x22, 0x38, 0x0a, 0x1a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x70,
	0x61, 0x6e, 0x79, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x46, 0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x46, 0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0xd1, 0x03, 0x0a,
	0x14, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x78, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e,
	0x79, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x41, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x12, 0x20, 0x0a, 0x0b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x26, 0x0a, 0x0e, 0x44, 0x61, 0x74, 0x65, 0x42, 0x65, 0x67, 0x69, 0x6e,
	0x42, 0x75, 0x69, 0x6c, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x44, 0x61, 0x74,
	0x65, 0x42, 0x65, 0x67, 0x69, 0x6e, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x44,
	0x61, 0x74, 0x65, 0x45, 0x6e, 0x64, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x44, 0x61, 0x74, 0x65, 0x45, 0x6e, 0x64, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x12,
	0x36, 0x0a, 0x16, 0x57, 0x69, 0x74, 0x68, 0x6f, 0x75, 0x74, 0x46, 0x69, 0x6e, 0x69, 0x73, 0x68,
	0x69, 0x6e, 0x67, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x16, 0x57, 0x69, 0x74, 0x68, 0x6f, 0x75, 0x74, 0x46, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x69, 0x6e,
	0x67, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x28, 0x0a, 0x0f, 0x46, 0x69, 0x6e, 0x69, 0x73,
	0x68, 0x69, 0x6e, 0x67, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0f, 0x46, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x4f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x2e, 0x0a, 0x12, 0x50, 0x72, 0x65, 0x46, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x69, 0x6e,
	0x67, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x12, 0x50,
	0x72, 0x65, 0x46, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x4f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x37, 0x0a, 0x0c, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x48, 0x6f, 0x75, 0x73, 0x69, 0x6e,
	0x67, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65,
	0x78, 0x2e, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x48, 0x6f, 0x75, 0x73, 0x65, 0x52, 0x0c, 0x43, 0x6c,
	0x61, 0x73, 0x73, 0x48, 0x6f, 0x75, 0x73, 0x69, 0x6e, 0x67, 0x12, 0x18, 0x0a, 0x07, 0x50, 0x61,
	0x72, 0x6b, 0x69, 0x6e, 0x67, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x50, 0x61, 0x72,
	0x6b, 0x69, 0x6e, 0x67, 0x12, 0x1a, 0x0a, 0x08, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79,
	0x18, 0x0c, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79,
	0x22, 0xba, 0x04, 0x0a, 0x15, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x6c,
	0x65, 0x78, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x43, 0x6f,
	0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x43,
	0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x41,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x12, 0x20, 0x0a, 0x0b,
	0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x26,
	0x0a, 0x0e, 0x44, 0x61, 0x74, 0x65, 0x42, 0x65, 0x67, 0x69, 0x6e, 0x42, 0x75, 0x69, 0x6c, 0x64,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x44, 0x61, 0x74, 0x65, 0x42, 0x65, 0x67, 0x69,
	0x6e, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x44, 0x61, 0x74, 0x65, 0x45, 0x6e,
	0x64, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x44, 0x61,
	0x74, 0x65, 0x45, 0x6e, 0x64, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x12, 0x36, 0x0a, 0x16, 0x57, 0x69,
	0x74, 0x68, 0x6f, 0x75, 0x74, 0x46, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x4f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x16, 0x57, 0x69, 0x74, 0x68,
	0x6f, 0x75, 0x74, 0x46, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x4f, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x28, 0x0a, 0x0f, 0x46, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x4f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x46, 0x69, 0x6e,
	0x69, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2e, 0x0a, 0x12,
	0x50, 0x72, 0x65, 0x46, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x4f, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x08, 0x52, 0x12, 0x50, 0x72, 0x65, 0x46, 0x69, 0x6e,
	0x69, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x37, 0x0a, 0x0c,
	0x43, 0x6c, 0x61, 0x73, 0x73, 0x48, 0x6f, 0x75, 0x73, 0x69, 0x6e, 0x67, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x13, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x78, 0x2e, 0x43, 0x6c, 0x61,
	0x73, 0x73, 0x48, 0x6f, 0x75, 0x73, 0x65, 0x52, 0x0c, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x48, 0x6f,
	0x75, 0x73, 0x69, 0x6e, 0x67, 0x12, 0x18, 0x0a, 0x07, 0x50, 0x61, 0x72, 0x6b, 0x69, 0x6e, 0x67,
	0x18, 0x0d, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x50, 0x61, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x12,
	0x1a, 0x0a, 0x08, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x18, 0x0e, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x08, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x12, 0x22, 0x0a, 0x0c, 0x44,
	0x61, 0x74, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0f, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x44, 0x61, 0x74, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x1c, 0x0a, 0x09, 0x49, 0x73, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x18, 0x10, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x09, 0x49, 0x73, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x22, 0x27, 0x0a,
	0x15, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x78, 0x42, 0x79, 0x49, 0x64, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x02, 0x49, 0x64, 0x22, 0xf9, 0x03, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x43, 0x6f,
	0x6d, 0x70, 0x6c, 0x65, 0x78, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x49,
	0x64, 0x12, 0x1c, 0x0a, 0x09, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x14, 0x0a,
	0x05, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x50, 0x68,
	0x6f, 0x74, 0x6f, 0x12, 0x20, 0x0a, 0x0b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x26, 0x0a, 0x0e, 0x44, 0x61, 0x74, 0x65, 0x42, 0x65, 0x67,
	0x69, 0x6e, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x44,
	0x61, 0x74, 0x65, 0x42, 0x65, 0x67, 0x69, 0x6e, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x12, 0x22, 0x0a,
	0x0c, 0x44, 0x61, 0x74, 0x65, 0x45, 0x6e, 0x64, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x44, 0x61, 0x74, 0x65, 0x45, 0x6e, 0x64, 0x42, 0x75, 0x69, 0x6c,
	0x64, 0x12, 0x36, 0x0a, 0x16, 0x57, 0x69, 0x74, 0x68, 0x6f, 0x75, 0x74, 0x46, 0x69, 0x6e, 0x69,
	0x73, 0x68, 0x69, 0x6e, 0x67, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x16, 0x57, 0x69, 0x74, 0x68, 0x6f, 0x75, 0x74, 0x46, 0x69, 0x6e, 0x69, 0x73, 0x68,
	0x69, 0x6e, 0x67, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x28, 0x0a, 0x0f, 0x46, 0x69, 0x6e,
	0x69, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0f, 0x46, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x4f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x2e, 0x0a, 0x12, 0x50, 0x72, 0x65, 0x46, 0x69, 0x6e, 0x69, 0x73, 0x68,
	0x69, 0x6e, 0x67, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x12, 0x50, 0x72, 0x65, 0x46, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x4f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x37, 0x0a, 0x0c, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x48, 0x6f, 0x75, 0x73,
	0x69, 0x6e, 0x67, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x63, 0x6f, 0x6d, 0x70,
	0x6c, 0x65, 0x78, 0x2e, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x48, 0x6f, 0x75, 0x73, 0x65, 0x52, 0x0c,
	0x43, 0x6c, 0x61, 0x73, 0x73, 0x48, 0x6f, 0x75, 0x73, 0x69, 0x6e, 0x67, 0x12, 0x18, 0x0a, 0x07,
	0x50, 0x61, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x50,
	0x61, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x12, 0x1a, 0x0a, 0x08, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69,
	0x74, 0x79, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69,
	0x74, 0x79, 0x22, 0x69, 0x0a, 0x19, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x70,
	0x6c, 0x65, 0x78, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x12, 0x0a, 0x04, 0x46, 0x69, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x46,
	0x69, 0x6c, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x46, 0x69, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x46, 0x69, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x1c, 0x0a, 0x09, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x78, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x09, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x78, 0x49, 0x64, 0x22, 0x38, 0x0a,
	0x1a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x78, 0x50, 0x68,
	0x6f, 0x74, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x46,
	0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x46,
	0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x2a, 0x87, 0x01, 0x0a, 0x0a, 0x43, 0x6c, 0x61, 0x73,
	0x73, 0x48, 0x6f, 0x75, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x12, 0x43, 0x4c, 0x41, 0x53, 0x53, 0x5f,
	0x48, 0x4f, 0x55, 0x53, 0x45, 0x5f, 0x45, 0x43, 0x4f, 0x4e, 0x4f, 0x4d, 0x10, 0x00, 0x12, 0x17,
	0x0a, 0x13, 0x43, 0x4c, 0x41, 0x53, 0x53, 0x5f, 0x48, 0x4f, 0x55, 0x53, 0x45, 0x5f, 0x43, 0x4f,
	0x4d, 0x46, 0x4f, 0x52, 0x54, 0x10, 0x01, 0x12, 0x18, 0x0a, 0x14, 0x43, 0x4c, 0x41, 0x53, 0x53,
	0x5f, 0x48, 0x4f, 0x55, 0x53, 0x45, 0x5f, 0x42, 0x55, 0x53, 0x49, 0x4e, 0x45, 0x53, 0x53, 0x10,
	0x02, 0x12, 0x17, 0x0a, 0x13, 0x43, 0x4c, 0x41, 0x53, 0x53, 0x5f, 0x48, 0x4f, 0x55, 0x53, 0x45,
	0x5f, 0x50, 0x52, 0x45, 0x4d, 0x49, 0x55, 0x4d, 0x10, 0x03, 0x12, 0x15, 0x0a, 0x11, 0x43, 0x4c,
	0x41, 0x53, 0x53, 0x5f, 0x48, 0x4f, 0x55, 0x53, 0x45, 0x5f, 0x45, 0x4c, 0x49, 0x54, 0x45, 0x10,
	0x04, 0x32, 0x99, 0x04, 0x0a, 0x07, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x78, 0x12, 0x50, 0x0a,
	0x0d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x12, 0x1d,
	0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x78, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43,
	0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e,
	0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x78, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f,
	0x6d, 0x70, 0x61, 0x6e, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x53, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x42, 0x79, 0x49,
	0x64, 0x12, 0x1e, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x78, 0x2e, 0x47, 0x65, 0x74, 0x43,
	0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x1f, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x78, 0x2e, 0x47, 0x65, 0x74, 0x43,
	0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x5f, 0x0a, 0x12, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f,
	0x6d, 0x70, 0x61, 0x6e, 0x79, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x12, 0x22, 0x2e, 0x63, 0x6f, 0x6d,
	0x70, 0x6c, 0x65, 0x78, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x61,
	0x6e, 0x79, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23,
	0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x78, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43,
	0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x50, 0x0a, 0x0d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43,
	0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x78, 0x12, 0x1d, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x78,
	0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x78, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x78, 0x2e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x78, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x53, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x43, 0x6f,
	0x6d, 0x70, 0x6c, 0x65, 0x78, 0x42, 0x79, 0x49, 0x64, 0x12, 0x1e, 0x2e, 0x63, 0x6f, 0x6d, 0x70,
	0x6c, 0x65, 0x78, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x78, 0x42, 0x79,
	0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x63, 0x6f, 0x6d, 0x70,
	0x6c, 0x65, 0x78, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x78, 0x42, 0x79,
	0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5f, 0x0a, 0x12,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x78, 0x50, 0x68, 0x6f,
	0x74, 0x6f, 0x12, 0x22, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x78, 0x2e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x78, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x78,
	0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x78, 0x50, 0x68,
	0x6f, 0x74, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x31, 0x5a,
	0x2f, 0x2e, 0x2f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2f, 0x70, 0x6b, 0x67, 0x2f,
	0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x78, 0x65, 0x73, 0x2f, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65,
	0x72, 0x79, 0x2f, 0x67, 0x72, 0x70, 0x63, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x3b, 0x67, 0x65, 0x6e,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_complex_proto_rawDescOnce sync.Once
	file_complex_proto_rawDescData = file_complex_proto_rawDesc
)

func file_complex_proto_rawDescGZIP() []byte {
	file_complex_proto_rawDescOnce.Do(func() {
		file_complex_proto_rawDescData = protoimpl.X.CompressGZIP(file_complex_proto_rawDescData)
	})
	return file_complex_proto_rawDescData
}

var file_complex_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_complex_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_complex_proto_goTypes = []interface{}{
	(ClassHouse)(0),                    // 0: complex.ClassHouse
	(*CreateCompanyRequest)(nil),       // 1: complex.CreateCompanyRequest
	(*CreateCompanyResponse)(nil),      // 2: complex.CreateCompanyResponse
	(*GetCompanyByIdRequest)(nil),      // 3: complex.GetCompanyByIdRequest
	(*GetCompanyByIdResponse)(nil),     // 4: complex.GetCompanyByIdResponse
	(*UpdateCompanyPhotoRequest)(nil),  // 5: complex.UpdateCompanyPhotoRequest
	(*UpdateCompanyPhotoResponse)(nil), // 6: complex.UpdateCompanyPhotoResponse
	(*CreateComplexRequest)(nil),       // 7: complex.CreateComplexRequest
	(*CreateComplexResponse)(nil),      // 8: complex.CreateComplexResponse
	(*GetComplexByIdRequest)(nil),      // 9: complex.GetComplexByIdRequest
	(*GetComplexByIdResponse)(nil),     // 10: complex.GetComplexByIdResponse
	(*UpdateComplexPhotoRequest)(nil),  // 11: complex.UpdateComplexPhotoRequest
	(*UpdateComplexPhotoResponse)(nil), // 12: complex.UpdateComplexPhotoResponse
}
var file_complex_proto_depIdxs = []int32{
	0,  // 0: complex.CreateComplexRequest.ClassHousing:type_name -> complex.ClassHouse
	0,  // 1: complex.CreateComplexResponse.ClassHousing:type_name -> complex.ClassHouse
	0,  // 2: complex.GetComplexByIdResponse.ClassHousing:type_name -> complex.ClassHouse
	1,  // 3: complex.Complex.CreateCompany:input_type -> complex.CreateCompanyRequest
	3,  // 4: complex.Complex.GetCompanyById:input_type -> complex.GetCompanyByIdRequest
	5,  // 5: complex.Complex.UpdateCompanyPhoto:input_type -> complex.UpdateCompanyPhotoRequest
	7,  // 6: complex.Complex.CreateComplex:input_type -> complex.CreateComplexRequest
	9,  // 7: complex.Complex.GetComplexById:input_type -> complex.GetComplexByIdRequest
	11, // 8: complex.Complex.UpdateComplexPhoto:input_type -> complex.UpdateComplexPhotoRequest
	2,  // 9: complex.Complex.CreateCompany:output_type -> complex.CreateCompanyResponse
	4,  // 10: complex.Complex.GetCompanyById:output_type -> complex.GetCompanyByIdResponse
	6,  // 11: complex.Complex.UpdateCompanyPhoto:output_type -> complex.UpdateCompanyPhotoResponse
	8,  // 12: complex.Complex.CreateComplex:output_type -> complex.CreateComplexResponse
	10, // 13: complex.Complex.GetComplexById:output_type -> complex.GetComplexByIdResponse
	12, // 14: complex.Complex.UpdateComplexPhoto:output_type -> complex.UpdateComplexPhotoResponse
	9,  // [9:15] is the sub-list for method output_type
	3,  // [3:9] is the sub-list for method input_type
	3,  // [3:3] is the sub-list for extension type_name
	3,  // [3:3] is the sub-list for extension extendee
	0,  // [0:3] is the sub-list for field type_name
}

func init() { file_complex_proto_init() }
func file_complex_proto_init() {
	if File_complex_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_complex_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateCompanyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_complex_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateCompanyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_complex_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCompanyByIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_complex_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCompanyByIdResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_complex_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateCompanyPhotoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_complex_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateCompanyPhotoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_complex_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateComplexRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_complex_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateComplexResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_complex_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetComplexByIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_complex_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetComplexByIdResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_complex_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateComplexPhotoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_complex_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateComplexPhotoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_complex_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_complex_proto_goTypes,
		DependencyIndexes: file_complex_proto_depIdxs,
		EnumInfos:         file_complex_proto_enumTypes,
		MessageInfos:      file_complex_proto_msgTypes,
	}.Build()
	File_complex_proto = out.File
	file_complex_proto_rawDesc = nil
	file_complex_proto_goTypes = nil
	file_complex_proto_depIdxs = nil
}
