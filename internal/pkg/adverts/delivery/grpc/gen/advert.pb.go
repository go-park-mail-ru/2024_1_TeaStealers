// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.14.0
// source: advert.proto

package gen

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type StatusAreaHouse int32

const (
	StatusAreaHouse_STATUS_AREA_IHC StatusAreaHouse = 0
	StatusAreaHouse_STATUS_AREA_DNP StatusAreaHouse = 1
	StatusAreaHouse_STATUS_AREA_G   StatusAreaHouse = 2
	StatusAreaHouse_STATUS_AREA_F   StatusAreaHouse = 3
	StatusAreaHouse_STATUS_AREA_PSP StatusAreaHouse = 4
)

// Enum value maps for StatusAreaHouse.
var (
	StatusAreaHouse_name = map[int32]string{
		0: "STATUS_AREA_IHC",
		1: "STATUS_AREA_DNP",
		2: "STATUS_AREA_G",
		3: "STATUS_AREA_F",
		4: "STATUS_AREA_PSP",
	}
	StatusAreaHouse_value = map[string]int32{
		"STATUS_AREA_IHC": 0,
		"STATUS_AREA_DNP": 1,
		"STATUS_AREA_G":   2,
		"STATUS_AREA_F":   3,
		"STATUS_AREA_PSP": 4,
	}
)

func (x StatusAreaHouse) Enum() *StatusAreaHouse {
	p := new(StatusAreaHouse)
	*p = x
	return p
}

func (x StatusAreaHouse) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (StatusAreaHouse) Descriptor() protoreflect.EnumDescriptor {
	return file_advert_proto_enumTypes[0].Descriptor()
}

func (StatusAreaHouse) Type() protoreflect.EnumType {
	return &file_advert_proto_enumTypes[0]
}

func (x StatusAreaHouse) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use StatusAreaHouse.Descriptor instead.
func (StatusAreaHouse) EnumDescriptor() ([]byte, []int) {
	return file_advert_proto_rawDescGZIP(), []int{0}
}

type StatusHomeHouse int32

const (
	StatusHomeHouse_STATUS_HOME_LIVE          StatusHomeHouse = 0
	StatusHomeHouse_STATUS_HOME_REPAIR_NEED   StatusHomeHouse = 1
	StatusHomeHouse_STATUS_HOME_COMPLETE_NEED StatusHomeHouse = 2
	StatusHomeHouse_STATUS_HOME_RENOVATION    StatusHomeHouse = 3
)

// Enum value maps for StatusHomeHouse.
var (
	StatusHomeHouse_name = map[int32]string{
		0: "STATUS_HOME_LIVE",
		1: "STATUS_HOME_REPAIR_NEED",
		2: "STATUS_HOME_COMPLETE_NEED",
		3: "STATUS_HOME_RENOVATION",
	}
	StatusHomeHouse_value = map[string]int32{
		"STATUS_HOME_LIVE":          0,
		"STATUS_HOME_REPAIR_NEED":   1,
		"STATUS_HOME_COMPLETE_NEED": 2,
		"STATUS_HOME_RENOVATION":    3,
	}
)

func (x StatusHomeHouse) Enum() *StatusHomeHouse {
	p := new(StatusHomeHouse)
	*p = x
	return p
}

func (x StatusHomeHouse) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (StatusHomeHouse) Descriptor() protoreflect.EnumDescriptor {
	return file_advert_proto_enumTypes[1].Descriptor()
}

func (StatusHomeHouse) Type() protoreflect.EnumType {
	return &file_advert_proto_enumTypes[1]
}

func (x StatusHomeHouse) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use StatusHomeHouse.Descriptor instead.
func (StatusHomeHouse) EnumDescriptor() ([]byte, []int) {
	return file_advert_proto_rawDescGZIP(), []int{1}
}

type MaterialBuilding int32

const (
	MaterialBuilding_MATERIAL_BRICK                  MaterialBuilding = 0
	MaterialBuilding_MATERIAL_MONOLITHIC             MaterialBuilding = 1
	MaterialBuilding_MATERIAL_WOOD                   MaterialBuilding = 2
	MaterialBuilding_MATERIAL_PANEL                  MaterialBuilding = 3
	MaterialBuilding_MATERIAL_STALINSKY              MaterialBuilding = 4
	MaterialBuilding_MATERIAL_BLOCK                  MaterialBuilding = 5
	MaterialBuilding_MATERIAL_MONOLITHIC_BLOCK       MaterialBuilding = 6
	MaterialBuilding_MATERIAL_FRAME                  MaterialBuilding = 7
	MaterialBuilding_MATERIAL_AERATED_CONCRETE_BLOCK MaterialBuilding = 8
	MaterialBuilding_MATERIAL_GAS_SILICATE_BLOCK     MaterialBuilding = 9
	MaterialBuilding_MATERIAL_FOAM_CONCRETE_BLOCK    MaterialBuilding = 10
)

// Enum value maps for MaterialBuilding.
var (
	MaterialBuilding_name = map[int32]string{
		0:  "MATERIAL_BRICK",
		1:  "MATERIAL_MONOLITHIC",
		2:  "MATERIAL_WOOD",
		3:  "MATERIAL_PANEL",
		4:  "MATERIAL_STALINSKY",
		5:  "MATERIAL_BLOCK",
		6:  "MATERIAL_MONOLITHIC_BLOCK",
		7:  "MATERIAL_FRAME",
		8:  "MATERIAL_AERATED_CONCRETE_BLOCK",
		9:  "MATERIAL_GAS_SILICATE_BLOCK",
		10: "MATERIAL_FOAM_CONCRETE_BLOCK",
	}
	MaterialBuilding_value = map[string]int32{
		"MATERIAL_BRICK":                  0,
		"MATERIAL_MONOLITHIC":             1,
		"MATERIAL_WOOD":                   2,
		"MATERIAL_PANEL":                  3,
		"MATERIAL_STALINSKY":              4,
		"MATERIAL_BLOCK":                  5,
		"MATERIAL_MONOLITHIC_BLOCK":       6,
		"MATERIAL_FRAME":                  7,
		"MATERIAL_AERATED_CONCRETE_BLOCK": 8,
		"MATERIAL_GAS_SILICATE_BLOCK":     9,
		"MATERIAL_FOAM_CONCRETE_BLOCK":    10,
	}
)

func (x MaterialBuilding) Enum() *MaterialBuilding {
	p := new(MaterialBuilding)
	*p = x
	return p
}

func (x MaterialBuilding) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MaterialBuilding) Descriptor() protoreflect.EnumDescriptor {
	return file_advert_proto_enumTypes[2].Descriptor()
}

func (MaterialBuilding) Type() protoreflect.EnumType {
	return &file_advert_proto_enumTypes[2]
}

func (x MaterialBuilding) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MaterialBuilding.Descriptor instead.
func (MaterialBuilding) EnumDescriptor() ([]byte, []int) {
	return file_advert_proto_rawDescGZIP(), []int{2}
}

type GetAdvertByIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
}

func (x *GetAdvertByIdRequest) Reset() {
	*x = GetAdvertByIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_advert_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAdvertByIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAdvertByIdRequest) ProtoMessage() {}

func (x *GetAdvertByIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_advert_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAdvertByIdRequest.ProtoReflect.Descriptor instead.
func (*GetAdvertByIdRequest) Descriptor() ([]byte, []int) {
	return file_advert_proto_rawDescGZIP(), []int{0}
}

func (x *GetAdvertByIdRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type AddressData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Province     string `protobuf:"bytes,1,opt,name=Province,proto3" json:"Province,omitempty"`
	Town         string `protobuf:"bytes,2,opt,name=Town,proto3" json:"Town,omitempty"`
	Street       string `protobuf:"bytes,3,opt,name=Street,proto3" json:"Street,omitempty"`
	House        string `protobuf:"bytes,4,opt,name=House,proto3" json:"House,omitempty"`
	Metro        string `protobuf:"bytes,5,opt,name=Metro,proto3" json:"Metro,omitempty"`
	AddressPoint string `protobuf:"bytes,6,opt,name=AddressPoint,proto3" json:"AddressPoint,omitempty"`
}

func (x *AddressData) Reset() {
	*x = AddressData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_advert_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddressData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddressData) ProtoMessage() {}

func (x *AddressData) ProtoReflect() protoreflect.Message {
	mi := &file_advert_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddressData.ProtoReflect.Descriptor instead.
func (*AddressData) Descriptor() ([]byte, []int) {
	return file_advert_proto_rawDescGZIP(), []int{1}
}

func (x *AddressData) GetProvince() string {
	if x != nil {
		return x.Province
	}
	return ""
}

func (x *AddressData) GetTown() string {
	if x != nil {
		return x.Town
	}
	return ""
}

func (x *AddressData) GetStreet() string {
	if x != nil {
		return x.Street
	}
	return ""
}

func (x *AddressData) GetHouse() string {
	if x != nil {
		return x.House
	}
	return ""
}

func (x *AddressData) GetMetro() string {
	if x != nil {
		return x.Metro
	}
	return ""
}

func (x *AddressData) GetAddressPoint() string {
	if x != nil {
		return x.AddressPoint
	}
	return ""
}

type ImageResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       int64  `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
	Photo    string `protobuf:"bytes,2,opt,name=Photo,proto3" json:"Photo,omitempty"`
	Priority int32  `protobuf:"varint,3,opt,name=Priority,proto3" json:"Priority,omitempty"`
}

func (x *ImageResp) Reset() {
	*x = ImageResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_advert_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ImageResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImageResp) ProtoMessage() {}

func (x *ImageResp) ProtoReflect() protoreflect.Message {
	mi := &file_advert_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImageResp.ProtoReflect.Descriptor instead.
func (*ImageResp) Descriptor() ([]byte, []int) {
	return file_advert_proto_rawDescGZIP(), []int{2}
}

func (x *ImageResp) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ImageResp) GetPhoto() string {
	if x != nil {
		return x.Photo
	}
	return ""
}

func (x *ImageResp) GetPriority() int32 {
	if x != nil {
		return x.Priority
	}
	return 0
}

type PriceChangeData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Price        int64  `protobuf:"varint,1,opt,name=Price,proto3" json:"Price,omitempty"`
	DateCreation string `protobuf:"bytes,2,opt,name=DateCreation,proto3" json:"DateCreation,omitempty"`
}

func (x *PriceChangeData) Reset() {
	*x = PriceChangeData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_advert_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PriceChangeData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PriceChangeData) ProtoMessage() {}

func (x *PriceChangeData) ProtoReflect() protoreflect.Message {
	mi := &file_advert_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PriceChangeData.ProtoReflect.Descriptor instead.
func (*PriceChangeData) Descriptor() ([]byte, []int) {
	return file_advert_proto_rawDescGZIP(), []int{3}
}

func (x *PriceChangeData) GetPrice() int64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *PriceChangeData) GetDateCreation() string {
	if x != nil {
		return x.DateCreation
	}
	return ""
}

type ComplexAdvertProperties struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ComplexId    string `protobuf:"bytes,1,opt,name=ComplexId,proto3" json:"ComplexId,omitempty"`
	NameComplex  string `protobuf:"bytes,2,opt,name=NameComplex,proto3" json:"NameComplex,omitempty"`
	PhotoCompany string `protobuf:"bytes,3,opt,name=PhotoCompany,proto3" json:"PhotoCompany,omitempty"`
	NameCompany  string `protobuf:"bytes,4,opt,name=NameCompany,proto3" json:"NameCompany,omitempty"`
}

func (x *ComplexAdvertProperties) Reset() {
	*x = ComplexAdvertProperties{}
	if protoimpl.UnsafeEnabled {
		mi := &file_advert_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ComplexAdvertProperties) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ComplexAdvertProperties) ProtoMessage() {}

func (x *ComplexAdvertProperties) ProtoReflect() protoreflect.Message {
	mi := &file_advert_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ComplexAdvertProperties.ProtoReflect.Descriptor instead.
func (*ComplexAdvertProperties) Descriptor() ([]byte, []int) {
	return file_advert_proto_rawDescGZIP(), []int{4}
}

func (x *ComplexAdvertProperties) GetComplexId() string {
	if x != nil {
		return x.ComplexId
	}
	return ""
}

func (x *ComplexAdvertProperties) GetNameComplex() string {
	if x != nil {
		return x.NameComplex
	}
	return ""
}

func (x *ComplexAdvertProperties) GetPhotoCompany() string {
	if x != nil {
		return x.PhotoCompany
	}
	return ""
}

func (x *ComplexAdvertProperties) GetNameCompany() string {
	if x != nil {
		return x.NameCompany
	}
	return ""
}

type FlatProperties struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Floor             int32   `protobuf:"varint,1,opt,name=Floor,proto3" json:"Floor,omitempty"`
	CeilingHeight     float64 `protobuf:"fixed64,2,opt,name=CeilingHeight,proto3" json:"CeilingHeight,omitempty"`
	SquareGeneral     float64 `protobuf:"fixed64,3,opt,name=SquareGeneral,proto3" json:"SquareGeneral,omitempty"`
	RoomCount         int32   `protobuf:"varint,4,opt,name=RoomCount,proto3" json:"RoomCount,omitempty"`
	SquareResidential float64 `protobuf:"fixed64,5,opt,name=SquareResidential,proto3" json:"SquareResidential,omitempty"`
	Apartment         bool    `protobuf:"varint,6,opt,name=Apartment,proto3" json:"Apartment,omitempty"`
	FloorGeneral      int32   `protobuf:"varint,7,opt,name=FloorGeneral,proto3" json:"FloorGeneral,omitempty"`
}

func (x *FlatProperties) Reset() {
	*x = FlatProperties{}
	if protoimpl.UnsafeEnabled {
		mi := &file_advert_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FlatProperties) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FlatProperties) ProtoMessage() {}

func (x *FlatProperties) ProtoReflect() protoreflect.Message {
	mi := &file_advert_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FlatProperties.ProtoReflect.Descriptor instead.
func (*FlatProperties) Descriptor() ([]byte, []int) {
	return file_advert_proto_rawDescGZIP(), []int{5}
}

func (x *FlatProperties) GetFloor() int32 {
	if x != nil {
		return x.Floor
	}
	return 0
}

func (x *FlatProperties) GetCeilingHeight() float64 {
	if x != nil {
		return x.CeilingHeight
	}
	return 0
}

func (x *FlatProperties) GetSquareGeneral() float64 {
	if x != nil {
		return x.SquareGeneral
	}
	return 0
}

func (x *FlatProperties) GetRoomCount() int32 {
	if x != nil {
		return x.RoomCount
	}
	return 0
}

func (x *FlatProperties) GetSquareResidential() float64 {
	if x != nil {
		return x.SquareResidential
	}
	return 0
}

func (x *FlatProperties) GetApartment() bool {
	if x != nil {
		return x.Apartment
	}
	return false
}

func (x *FlatProperties) GetFloorGeneral() int32 {
	if x != nil {
		return x.FloorGeneral
	}
	return 0
}

type HouseProperties struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CeilingHeight float64         `protobuf:"fixed64,1,opt,name=CeilingHeight,proto3" json:"CeilingHeight,omitempty"`
	SquareArea    float64         `protobuf:"fixed64,2,opt,name=SquareArea,proto3" json:"SquareArea,omitempty"`
	SquareHouse   float64         `protobuf:"fixed64,3,opt,name=SquareHouse,proto3" json:"SquareHouse,omitempty"`
	BedroomCount  int32           `protobuf:"varint,4,opt,name=BedroomCount,proto3" json:"BedroomCount,omitempty"`
	StatusArea    StatusAreaHouse `protobuf:"varint,5,opt,name=StatusArea,proto3,enum=adverts.StatusAreaHouse" json:"StatusArea,omitempty"`
	Cottage       bool            `protobuf:"varint,6,opt,name=Cottage,proto3" json:"Cottage,omitempty"`
	StatusHome    StatusHomeHouse `protobuf:"varint,7,opt,name=StatusHome,proto3,enum=adverts.StatusHomeHouse" json:"StatusHome,omitempty"`
	Floor         int32           `protobuf:"varint,8,opt,name=Floor,proto3" json:"Floor,omitempty"`
}

func (x *HouseProperties) Reset() {
	*x = HouseProperties{}
	if protoimpl.UnsafeEnabled {
		mi := &file_advert_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HouseProperties) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HouseProperties) ProtoMessage() {}

func (x *HouseProperties) ProtoReflect() protoreflect.Message {
	mi := &file_advert_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HouseProperties.ProtoReflect.Descriptor instead.
func (*HouseProperties) Descriptor() ([]byte, []int) {
	return file_advert_proto_rawDescGZIP(), []int{6}
}

func (x *HouseProperties) GetCeilingHeight() float64 {
	if x != nil {
		return x.CeilingHeight
	}
	return 0
}

func (x *HouseProperties) GetSquareArea() float64 {
	if x != nil {
		return x.SquareArea
	}
	return 0
}

func (x *HouseProperties) GetSquareHouse() float64 {
	if x != nil {
		return x.SquareHouse
	}
	return 0
}

func (x *HouseProperties) GetBedroomCount() int32 {
	if x != nil {
		return x.BedroomCount
	}
	return 0
}

func (x *HouseProperties) GetStatusArea() StatusAreaHouse {
	if x != nil {
		return x.StatusArea
	}
	return StatusAreaHouse_STATUS_AREA_IHC
}

func (x *HouseProperties) GetCottage() bool {
	if x != nil {
		return x.Cottage
	}
	return false
}

func (x *HouseProperties) GetStatusHome() StatusHomeHouse {
	if x != nil {
		return x.StatusHome
	}
	return StatusHomeHouse_STATUS_HOME_LIVE
}

func (x *HouseProperties) GetFloor() int32 {
	if x != nil {
		return x.Floor
	}
	return 0
}

type GetAdvertByIdResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                int64                    `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
	AdvertType        string                   `protobuf:"bytes,2,opt,name=AdvertType,proto3" json:"AdvertType,omitempty"`
	TypeSale          string                   `protobuf:"bytes,3,opt,name=TypeSale,proto3" json:"TypeSale,omitempty"`
	Title             string                   `protobuf:"bytes,4,opt,name=Title,proto3" json:"Title,omitempty"`
	Description       string                   `protobuf:"bytes,5,opt,name=Description,proto3" json:"Description,omitempty"`
	CountViews        int64                    `protobuf:"varint,6,opt,name=CountViews,proto3" json:"CountViews,omitempty"`
	CountLikes        int64                    `protobuf:"varint,7,opt,name=CountLikes,proto3" json:"CountLikes,omitempty"`
	Price             int64                    `protobuf:"varint,8,opt,name=Price,proto3" json:"Price,omitempty"`
	Phone             string                   `protobuf:"bytes,9,opt,name=Phone,proto3" json:"Phone,omitempty"`
	IsLiked           bool                     `protobuf:"varint,10,opt,name=IsLiked,proto3" json:"IsLiked,omitempty"`
	IsAgent           bool                     `protobuf:"varint,11,opt,name=IsAgent,proto3" json:"IsAgent,omitempty"`
	Metro             string                   `protobuf:"bytes,12,opt,name=Metro,proto3" json:"Metro,omitempty"`
	Address           string                   `protobuf:"bytes,13,opt,name=Address,proto3" json:"Address,omitempty"`
	AddressPoint      string                   `protobuf:"bytes,14,opt,name=AddressPoint,proto3" json:"AddressPoint,omitempty"`
	PriceHistory      []*PriceChangeData       `protobuf:"bytes,15,rep,name=PriceHistory,proto3" json:"PriceHistory,omitempty"`
	Images            []*ImageResp             `protobuf:"bytes,16,rep,name=Images,proto3" json:"Images,omitempty"`
	HouseProp         *HouseProperties         `protobuf:"bytes,17,opt,name=HouseProp,proto3" json:"HouseProp,omitempty"`
	FlatProperties    *FlatProperties          `protobuf:"bytes,18,opt,name=FlatProperties,proto3" json:"FlatProperties,omitempty"`
	YearCreation      int32                    `protobuf:"varint,19,opt,name=YearCreation,proto3" json:"YearCreation,omitempty"`
	Material          MaterialBuilding         `protobuf:"varint,20,opt,name=Material,proto3,enum=adverts.MaterialBuilding" json:"Material,omitempty"`
	ComplexProperties *ComplexAdvertProperties `protobuf:"bytes,21,opt,name=ComplexProperties,proto3" json:"ComplexProperties,omitempty"`
	DateCreation      string                   `protobuf:"bytes,22,opt,name=DateCreation,proto3" json:"DateCreation,omitempty"`
	RespCode          int32                    `protobuf:"varint,23,opt,name=RespCode,proto3" json:"RespCode,omitempty"`
}

func (x *GetAdvertByIdResponse) Reset() {
	*x = GetAdvertByIdResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_advert_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAdvertByIdResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAdvertByIdResponse) ProtoMessage() {}

func (x *GetAdvertByIdResponse) ProtoReflect() protoreflect.Message {
	mi := &file_advert_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAdvertByIdResponse.ProtoReflect.Descriptor instead.
func (*GetAdvertByIdResponse) Descriptor() ([]byte, []int) {
	return file_advert_proto_rawDescGZIP(), []int{7}
}

func (x *GetAdvertByIdResponse) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *GetAdvertByIdResponse) GetAdvertType() string {
	if x != nil {
		return x.AdvertType
	}
	return ""
}

func (x *GetAdvertByIdResponse) GetTypeSale() string {
	if x != nil {
		return x.TypeSale
	}
	return ""
}

func (x *GetAdvertByIdResponse) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *GetAdvertByIdResponse) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *GetAdvertByIdResponse) GetCountViews() int64 {
	if x != nil {
		return x.CountViews
	}
	return 0
}

func (x *GetAdvertByIdResponse) GetCountLikes() int64 {
	if x != nil {
		return x.CountLikes
	}
	return 0
}

func (x *GetAdvertByIdResponse) GetPrice() int64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *GetAdvertByIdResponse) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *GetAdvertByIdResponse) GetIsLiked() bool {
	if x != nil {
		return x.IsLiked
	}
	return false
}

func (x *GetAdvertByIdResponse) GetIsAgent() bool {
	if x != nil {
		return x.IsAgent
	}
	return false
}

func (x *GetAdvertByIdResponse) GetMetro() string {
	if x != nil {
		return x.Metro
	}
	return ""
}

func (x *GetAdvertByIdResponse) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *GetAdvertByIdResponse) GetAddressPoint() string {
	if x != nil {
		return x.AddressPoint
	}
	return ""
}

func (x *GetAdvertByIdResponse) GetPriceHistory() []*PriceChangeData {
	if x != nil {
		return x.PriceHistory
	}
	return nil
}

func (x *GetAdvertByIdResponse) GetImages() []*ImageResp {
	if x != nil {
		return x.Images
	}
	return nil
}

func (x *GetAdvertByIdResponse) GetHouseProp() *HouseProperties {
	if x != nil {
		return x.HouseProp
	}
	return nil
}

func (x *GetAdvertByIdResponse) GetFlatProperties() *FlatProperties {
	if x != nil {
		return x.FlatProperties
	}
	return nil
}

func (x *GetAdvertByIdResponse) GetYearCreation() int32 {
	if x != nil {
		return x.YearCreation
	}
	return 0
}

func (x *GetAdvertByIdResponse) GetMaterial() MaterialBuilding {
	if x != nil {
		return x.Material
	}
	return MaterialBuilding_MATERIAL_BRICK
}

func (x *GetAdvertByIdResponse) GetComplexProperties() *ComplexAdvertProperties {
	if x != nil {
		return x.ComplexProperties
	}
	return nil
}

func (x *GetAdvertByIdResponse) GetDateCreation() string {
	if x != nil {
		return x.DateCreation
	}
	return ""
}

func (x *GetAdvertByIdResponse) GetRespCode() int32 {
	if x != nil {
		return x.RespCode
	}
	return 0
}

type GetRectangleAdvertsListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page       int64  `protobuf:"varint,1,opt,name=Page,proto3" json:"Page,omitempty"`
	Size       int64  `protobuf:"varint,2,opt,name=Size,proto3" json:"Size,omitempty"`
	AdvertType string `protobuf:"bytes,3,opt,name=AdvertType,proto3" json:"AdvertType,omitempty"`
	MinPrice   int64  `protobuf:"varint,4,opt,name=MinPrice,proto3" json:"MinPrice,omitempty"`
	MaxPrice   int64  `protobuf:"varint,5,opt,name=MaxPrice,proto3" json:"MaxPrice,omitempty"`
	DealType   string `protobuf:"bytes,6,opt,name=DealType,proto3" json:"DealType,omitempty"`
	RoomCount  int32  `protobuf:"varint,7,opt,name=RoomCount,proto3" json:"RoomCount,omitempty"`
	Address    string `protobuf:"bytes,8,opt,name=Address,proto3" json:"Address,omitempty"`
}

func (x *GetRectangleAdvertsListRequest) Reset() {
	*x = GetRectangleAdvertsListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_advert_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRectangleAdvertsListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRectangleAdvertsListRequest) ProtoMessage() {}

func (x *GetRectangleAdvertsListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_advert_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRectangleAdvertsListRequest.ProtoReflect.Descriptor instead.
func (*GetRectangleAdvertsListRequest) Descriptor() ([]byte, []int) {
	return file_advert_proto_rawDescGZIP(), []int{8}
}

func (x *GetRectangleAdvertsListRequest) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetRectangleAdvertsListRequest) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *GetRectangleAdvertsListRequest) GetAdvertType() string {
	if x != nil {
		return x.AdvertType
	}
	return ""
}

func (x *GetRectangleAdvertsListRequest) GetMinPrice() int64 {
	if x != nil {
		return x.MinPrice
	}
	return 0
}

func (x *GetRectangleAdvertsListRequest) GetMaxPrice() int64 {
	if x != nil {
		return x.MaxPrice
	}
	return 0
}

func (x *GetRectangleAdvertsListRequest) GetDealType() string {
	if x != nil {
		return x.DealType
	}
	return ""
}

func (x *GetRectangleAdvertsListRequest) GetRoomCount() int32 {
	if x != nil {
		return x.RoomCount
	}
	return 0
}

func (x *GetRectangleAdvertsListRequest) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

type AdvertRectangleData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             int64            `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
	AdvertType     string           `protobuf:"bytes,2,opt,name=AdvertType,proto3" json:"AdvertType,omitempty"`
	TypeSale       string           `protobuf:"bytes,3,opt,name=TypeSale,proto3" json:"TypeSale,omitempty"`
	Title          string           `protobuf:"bytes,4,opt,name=Title,proto3" json:"Title,omitempty"`
	Description    string           `protobuf:"bytes,5,opt,name=Description,proto3" json:"Description,omitempty"`
	Price          int64            `protobuf:"varint,6,opt,name=Price,proto3" json:"Price,omitempty"`
	Phone          string           `protobuf:"bytes,7,opt,name=Phone,proto3" json:"Phone,omitempty"`
	IsLiked        bool             `protobuf:"varint,8,opt,name=IsLiked,proto3" json:"IsLiked,omitempty"`
	Metro          string           `protobuf:"bytes,9,opt,name=Metro,proto3" json:"Metro,omitempty"`
	Address        string           `protobuf:"bytes,10,opt,name=Address,proto3" json:"Address,omitempty"`
	AddressPoint   string           `protobuf:"bytes,11,opt,name=AddressPoint,proto3" json:"AddressPoint,omitempty"`
	Photo          string           `protobuf:"bytes,12,opt,name=Photo,proto3" json:"Photo,omitempty"`
	HouseProp      *HouseProperties `protobuf:"bytes,13,opt,name=HouseProp,proto3" json:"HouseProp,omitempty"`
	FlatProperties *FlatProperties  `protobuf:"bytes,14,opt,name=FlatProperties,proto3" json:"FlatProperties,omitempty"`
	DateCreation   string           `protobuf:"bytes,15,opt,name=DateCreation,proto3" json:"DateCreation,omitempty"`
}

func (x *AdvertRectangleData) Reset() {
	*x = AdvertRectangleData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_advert_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdvertRectangleData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdvertRectangleData) ProtoMessage() {}

func (x *AdvertRectangleData) ProtoReflect() protoreflect.Message {
	mi := &file_advert_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdvertRectangleData.ProtoReflect.Descriptor instead.
func (*AdvertRectangleData) Descriptor() ([]byte, []int) {
	return file_advert_proto_rawDescGZIP(), []int{9}
}

func (x *AdvertRectangleData) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *AdvertRectangleData) GetAdvertType() string {
	if x != nil {
		return x.AdvertType
	}
	return ""
}

func (x *AdvertRectangleData) GetTypeSale() string {
	if x != nil {
		return x.TypeSale
	}
	return ""
}

func (x *AdvertRectangleData) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *AdvertRectangleData) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *AdvertRectangleData) GetPrice() int64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *AdvertRectangleData) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *AdvertRectangleData) GetIsLiked() bool {
	if x != nil {
		return x.IsLiked
	}
	return false
}

func (x *AdvertRectangleData) GetMetro() string {
	if x != nil {
		return x.Metro
	}
	return ""
}

func (x *AdvertRectangleData) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *AdvertRectangleData) GetAddressPoint() string {
	if x != nil {
		return x.AddressPoint
	}
	return ""
}

func (x *AdvertRectangleData) GetPhoto() string {
	if x != nil {
		return x.Photo
	}
	return ""
}

func (x *AdvertRectangleData) GetHouseProp() *HouseProperties {
	if x != nil {
		return x.HouseProp
	}
	return nil
}

func (x *AdvertRectangleData) GetFlatProperties() *FlatProperties {
	if x != nil {
		return x.FlatProperties
	}
	return nil
}

func (x *AdvertRectangleData) GetDateCreation() string {
	if x != nil {
		return x.DateCreation
	}
	return ""
}

type PageInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TotalElements int64 `protobuf:"varint,1,opt,name=TotalElements,proto3" json:"TotalElements,omitempty"`
	TotalPages    int64 `protobuf:"varint,2,opt,name=TotalPages,proto3" json:"TotalPages,omitempty"`
	CurrentPage   int64 `protobuf:"varint,3,opt,name=CurrentPage,proto3" json:"CurrentPage,omitempty"`
	PageSize      int64 `protobuf:"varint,4,opt,name=PageSize,proto3" json:"PageSize,omitempty"`
}

func (x *PageInfo) Reset() {
	*x = PageInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_advert_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PageInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PageInfo) ProtoMessage() {}

func (x *PageInfo) ProtoReflect() protoreflect.Message {
	mi := &file_advert_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PageInfo.ProtoReflect.Descriptor instead.
func (*PageInfo) Descriptor() ([]byte, []int) {
	return file_advert_proto_rawDescGZIP(), []int{10}
}

func (x *PageInfo) GetTotalElements() int64 {
	if x != nil {
		return x.TotalElements
	}
	return 0
}

func (x *PageInfo) GetTotalPages() int64 {
	if x != nil {
		return x.TotalPages
	}
	return 0
}

func (x *PageInfo) GetCurrentPage() int64 {
	if x != nil {
		return x.CurrentPage
	}
	return 0
}

func (x *PageInfo) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type GetRectangleAdvertsListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Adverts  []*AdvertRectangleData `protobuf:"bytes,1,rep,name=Adverts,proto3" json:"Adverts,omitempty"`
	Info     *PageInfo              `protobuf:"bytes,2,opt,name=Info,proto3" json:"Info,omitempty"`
	RespCode int32                  `protobuf:"varint,3,opt,name=RespCode,proto3" json:"RespCode,omitempty"`
}

func (x *GetRectangleAdvertsListResponse) Reset() {
	*x = GetRectangleAdvertsListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_advert_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRectangleAdvertsListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRectangleAdvertsListResponse) ProtoMessage() {}

func (x *GetRectangleAdvertsListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_advert_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRectangleAdvertsListResponse.ProtoReflect.Descriptor instead.
func (*GetRectangleAdvertsListResponse) Descriptor() ([]byte, []int) {
	return file_advert_proto_rawDescGZIP(), []int{11}
}

func (x *GetRectangleAdvertsListResponse) GetAdverts() []*AdvertRectangleData {
	if x != nil {
		return x.Adverts
	}
	return nil
}

func (x *GetRectangleAdvertsListResponse) GetInfo() *PageInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

func (x *GetRectangleAdvertsListResponse) GetRespCode() int32 {
	if x != nil {
		return x.RespCode
	}
	return 0
}

type UpdateAdvertByIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             int64            `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
	AdvertType     string           `protobuf:"bytes,2,opt,name=AdvertType,proto3" json:"AdvertType,omitempty"`
	TypeSale       string           `protobuf:"bytes,3,opt,name=TypeSale,proto3" json:"TypeSale,omitempty"`
	Title          string           `protobuf:"bytes,4,opt,name=Title,proto3" json:"Title,omitempty"`
	Description    string           `protobuf:"bytes,5,opt,name=Description,proto3" json:"Description,omitempty"`
	Price          int64            `protobuf:"varint,6,opt,name=Price,proto3" json:"Price,omitempty"`
	Phone          string           `protobuf:"bytes,7,opt,name=Phone,proto3" json:"Phone,omitempty"`
	IsAgent        bool             `protobuf:"varint,8,opt,name=isAgent,proto3" json:"isAgent,omitempty"`
	Address        *AddressData     `protobuf:"bytes,9,opt,name=Address,proto3" json:"Address,omitempty"`
	HouseProp      *HouseProperties `protobuf:"bytes,10,opt,name=HouseProp,proto3" json:"HouseProp,omitempty"`
	FlatProperties *FlatProperties  `protobuf:"bytes,11,opt,name=FlatProperties,proto3" json:"FlatProperties,omitempty"`
	YearCreation   int32            `protobuf:"varint,12,opt,name=YearCreation,proto3" json:"YearCreation,omitempty"`
	Material       MaterialBuilding `protobuf:"varint,13,opt,name=Material,proto3,enum=adverts.MaterialBuilding" json:"Material,omitempty"`
}

func (x *UpdateAdvertByIdRequest) Reset() {
	*x = UpdateAdvertByIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_advert_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateAdvertByIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAdvertByIdRequest) ProtoMessage() {}

func (x *UpdateAdvertByIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_advert_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAdvertByIdRequest.ProtoReflect.Descriptor instead.
func (*UpdateAdvertByIdRequest) Descriptor() ([]byte, []int) {
	return file_advert_proto_rawDescGZIP(), []int{12}
}

func (x *UpdateAdvertByIdRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateAdvertByIdRequest) GetAdvertType() string {
	if x != nil {
		return x.AdvertType
	}
	return ""
}

func (x *UpdateAdvertByIdRequest) GetTypeSale() string {
	if x != nil {
		return x.TypeSale
	}
	return ""
}

func (x *UpdateAdvertByIdRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *UpdateAdvertByIdRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *UpdateAdvertByIdRequest) GetPrice() int64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *UpdateAdvertByIdRequest) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *UpdateAdvertByIdRequest) GetIsAgent() bool {
	if x != nil {
		return x.IsAgent
	}
	return false
}

func (x *UpdateAdvertByIdRequest) GetAddress() *AddressData {
	if x != nil {
		return x.Address
	}
	return nil
}

func (x *UpdateAdvertByIdRequest) GetHouseProp() *HouseProperties {
	if x != nil {
		return x.HouseProp
	}
	return nil
}

func (x *UpdateAdvertByIdRequest) GetFlatProperties() *FlatProperties {
	if x != nil {
		return x.FlatProperties
	}
	return nil
}

func (x *UpdateAdvertByIdRequest) GetYearCreation() int32 {
	if x != nil {
		return x.YearCreation
	}
	return 0
}

func (x *UpdateAdvertByIdRequest) GetMaterial() MaterialBuilding {
	if x != nil {
		return x.Material
	}
	return MaterialBuilding_MATERIAL_BRICK
}

type UpdateAdvertByIdResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RespCode int32 `protobuf:"varint,2,opt,name=RespCode,proto3" json:"RespCode,omitempty"`
}

func (x *UpdateAdvertByIdResponse) Reset() {
	*x = UpdateAdvertByIdResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_advert_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateAdvertByIdResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAdvertByIdResponse) ProtoMessage() {}

func (x *UpdateAdvertByIdResponse) ProtoReflect() protoreflect.Message {
	mi := &file_advert_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAdvertByIdResponse.ProtoReflect.Descriptor instead.
func (*UpdateAdvertByIdResponse) Descriptor() ([]byte, []int) {
	return file_advert_proto_rawDescGZIP(), []int{13}
}

func (x *UpdateAdvertByIdResponse) GetRespCode() int32 {
	if x != nil {
		return x.RespCode
	}
	return 0
}

type DeleteAdvertByIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
}

func (x *DeleteAdvertByIdRequest) Reset() {
	*x = DeleteAdvertByIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_advert_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteAdvertByIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteAdvertByIdRequest) ProtoMessage() {}

func (x *DeleteAdvertByIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_advert_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteAdvertByIdRequest.ProtoReflect.Descriptor instead.
func (*DeleteAdvertByIdRequest) Descriptor() ([]byte, []int) {
	return file_advert_proto_rawDescGZIP(), []int{14}
}

func (x *DeleteAdvertByIdRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type DeleteAdvertByIdResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ok bool `protobuf:"varint,1,opt,name=Ok,proto3" json:"Ok,omitempty"`
}

func (x *DeleteAdvertByIdResponse) Reset() {
	*x = DeleteAdvertByIdResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_advert_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteAdvertByIdResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteAdvertByIdResponse) ProtoMessage() {}

func (x *DeleteAdvertByIdResponse) ProtoReflect() protoreflect.Message {
	mi := &file_advert_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteAdvertByIdResponse.ProtoReflect.Descriptor instead.
func (*DeleteAdvertByIdResponse) Descriptor() ([]byte, []int) {
	return file_advert_proto_rawDescGZIP(), []int{15}
}

func (x *DeleteAdvertByIdResponse) GetOk() bool {
	if x != nil {
		return x.Ok
	}
	return false
}

type LikeAdvertRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AdvId  int64 `protobuf:"varint,1,opt,name=advId,proto3" json:"advId,omitempty"`
	UserId int64 `protobuf:"varint,2,opt,name=userId,proto3" json:"userId,omitempty"`
}

func (x *LikeAdvertRequest) Reset() {
	*x = LikeAdvertRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_advert_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LikeAdvertRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LikeAdvertRequest) ProtoMessage() {}

func (x *LikeAdvertRequest) ProtoReflect() protoreflect.Message {
	mi := &file_advert_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LikeAdvertRequest.ProtoReflect.Descriptor instead.
func (*LikeAdvertRequest) Descriptor() ([]byte, []int) {
	return file_advert_proto_rawDescGZIP(), []int{16}
}

func (x *LikeAdvertRequest) GetAdvId() int64 {
	if x != nil {
		return x.AdvId
	}
	return 0
}

func (x *LikeAdvertRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type LikeAdvertResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RespCode int32 `protobuf:"varint,2,opt,name=RespCode,proto3" json:"RespCode,omitempty"`
}

func (x *LikeAdvertResponse) Reset() {
	*x = LikeAdvertResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_advert_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LikeAdvertResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LikeAdvertResponse) ProtoMessage() {}

func (x *LikeAdvertResponse) ProtoReflect() protoreflect.Message {
	mi := &file_advert_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LikeAdvertResponse.ProtoReflect.Descriptor instead.
func (*LikeAdvertResponse) Descriptor() ([]byte, []int) {
	return file_advert_proto_rawDescGZIP(), []int{17}
}

func (x *LikeAdvertResponse) GetRespCode() int32 {
	if x != nil {
		return x.RespCode
	}
	return 0
}

type DislikeAdvertRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AdvId  int64 `protobuf:"varint,1,opt,name=advId,proto3" json:"advId,omitempty"`
	UserId int64 `protobuf:"varint,2,opt,name=userId,proto3" json:"userId,omitempty"`
}

func (x *DislikeAdvertRequest) Reset() {
	*x = DislikeAdvertRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_advert_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DislikeAdvertRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DislikeAdvertRequest) ProtoMessage() {}

func (x *DislikeAdvertRequest) ProtoReflect() protoreflect.Message {
	mi := &file_advert_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DislikeAdvertRequest.ProtoReflect.Descriptor instead.
func (*DislikeAdvertRequest) Descriptor() ([]byte, []int) {
	return file_advert_proto_rawDescGZIP(), []int{18}
}

func (x *DislikeAdvertRequest) GetAdvId() int64 {
	if x != nil {
		return x.AdvId
	}
	return 0
}

func (x *DislikeAdvertRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type DislikeAdvertResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RespCode int32 `protobuf:"varint,2,opt,name=RespCode,proto3" json:"RespCode,omitempty"`
}

func (x *DislikeAdvertResponse) Reset() {
	*x = DislikeAdvertResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_advert_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DislikeAdvertResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DislikeAdvertResponse) ProtoMessage() {}

func (x *DislikeAdvertResponse) ProtoReflect() protoreflect.Message {
	mi := &file_advert_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DislikeAdvertResponse.ProtoReflect.Descriptor instead.
func (*DislikeAdvertResponse) Descriptor() ([]byte, []int) {
	return file_advert_proto_rawDescGZIP(), []int{19}
}

func (x *DislikeAdvertResponse) GetRespCode() int32 {
	if x != nil {
		return x.RespCode
	}
	return 0
}

type CreateHouseAdvertRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId          int64            `protobuf:"varint,1,opt,name=UserId,proto3" json:"UserId,omitempty"`
	TypeSale        string           `protobuf:"bytes,2,opt,name=TypeSale,proto3" json:"TypeSale,omitempty"`
	Title           string           `protobuf:"bytes,3,opt,name=Title,proto3" json:"Title,omitempty"`
	Description     string           `protobuf:"bytes,4,opt,name=Description,proto3" json:"Description,omitempty"`
	Phone           string           `protobuf:"bytes,5,opt,name=Phone,proto3" json:"Phone,omitempty"`
	IsAgent         bool             `protobuf:"varint,6,opt,name=IsAgent,proto3" json:"IsAgent,omitempty"`
	CreateHouseProp *HouseProperties `protobuf:"bytes,7,opt,name=CreateHouseProp,proto3" json:"CreateHouseProp,omitempty"`
	Price           int64            `protobuf:"varint,8,opt,name=Price,proto3" json:"Price,omitempty"`
	Material        MaterialBuilding `protobuf:"varint,9,opt,name=Material,proto3,enum=adverts.MaterialBuilding" json:"Material,omitempty"`
	Address         *AddressData     `protobuf:"bytes,10,opt,name=Address,proto3" json:"Address,omitempty"`
	YearCreation    int32            `protobuf:"varint,11,opt,name=YearCreation,proto3" json:"YearCreation,omitempty"`
}

func (x *CreateHouseAdvertRequest) Reset() {
	*x = CreateHouseAdvertRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_advert_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateHouseAdvertRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateHouseAdvertRequest) ProtoMessage() {}

func (x *CreateHouseAdvertRequest) ProtoReflect() protoreflect.Message {
	mi := &file_advert_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateHouseAdvertRequest.ProtoReflect.Descriptor instead.
func (*CreateHouseAdvertRequest) Descriptor() ([]byte, []int) {
	return file_advert_proto_rawDescGZIP(), []int{20}
}

func (x *CreateHouseAdvertRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *CreateHouseAdvertRequest) GetTypeSale() string {
	if x != nil {
		return x.TypeSale
	}
	return ""
}

func (x *CreateHouseAdvertRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *CreateHouseAdvertRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *CreateHouseAdvertRequest) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *CreateHouseAdvertRequest) GetIsAgent() bool {
	if x != nil {
		return x.IsAgent
	}
	return false
}

func (x *CreateHouseAdvertRequest) GetCreateHouseProp() *HouseProperties {
	if x != nil {
		return x.CreateHouseProp
	}
	return nil
}

func (x *CreateHouseAdvertRequest) GetPrice() int64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *CreateHouseAdvertRequest) GetMaterial() MaterialBuilding {
	if x != nil {
		return x.Material
	}
	return MaterialBuilding_MATERIAL_BRICK
}

func (x *CreateHouseAdvertRequest) GetAddress() *AddressData {
	if x != nil {
		return x.Address
	}
	return nil
}

func (x *CreateHouseAdvertRequest) GetYearCreation() int32 {
	if x != nil {
		return x.YearCreation
	}
	return 0
}

type CreateHouseAdvertResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           int64  `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
	UserId       int64  `protobuf:"varint,2,opt,name=UserId,proto3" json:"UserId,omitempty"`
	TypeSale     string `protobuf:"bytes,3,opt,name=TypeSale,proto3" json:"TypeSale,omitempty"`
	Title        string `protobuf:"bytes,4,opt,name=Title,proto3" json:"Title,omitempty"`
	Description  string `protobuf:"bytes,5,opt,name=Description,proto3" json:"Description,omitempty"`
	Phone        string `protobuf:"bytes,6,opt,name=Phone,proto3" json:"Phone,omitempty"`
	IsAgent      bool   `protobuf:"varint,7,opt,name=IsAgent,proto3" json:"IsAgent,omitempty"`
	Priority     int64  `protobuf:"varint,8,opt,name=Priority,proto3" json:"Priority,omitempty"`
	DateCreation string `protobuf:"bytes,9,opt,name=DateCreation,proto3" json:"DateCreation,omitempty"`
	RespCode     int32  `protobuf:"varint,11,opt,name=RespCode,proto3" json:"RespCode,omitempty"`
}

func (x *CreateHouseAdvertResponse) Reset() {
	*x = CreateHouseAdvertResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_advert_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateHouseAdvertResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateHouseAdvertResponse) ProtoMessage() {}

func (x *CreateHouseAdvertResponse) ProtoReflect() protoreflect.Message {
	mi := &file_advert_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateHouseAdvertResponse.ProtoReflect.Descriptor instead.
func (*CreateHouseAdvertResponse) Descriptor() ([]byte, []int) {
	return file_advert_proto_rawDescGZIP(), []int{21}
}

func (x *CreateHouseAdvertResponse) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CreateHouseAdvertResponse) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *CreateHouseAdvertResponse) GetTypeSale() string {
	if x != nil {
		return x.TypeSale
	}
	return ""
}

func (x *CreateHouseAdvertResponse) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *CreateHouseAdvertResponse) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *CreateHouseAdvertResponse) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *CreateHouseAdvertResponse) GetIsAgent() bool {
	if x != nil {
		return x.IsAgent
	}
	return false
}

func (x *CreateHouseAdvertResponse) GetPriority() int64 {
	if x != nil {
		return x.Priority
	}
	return 0
}

func (x *CreateHouseAdvertResponse) GetDateCreation() string {
	if x != nil {
		return x.DateCreation
	}
	return ""
}

func (x *CreateHouseAdvertResponse) GetRespCode() int32 {
	if x != nil {
		return x.RespCode
	}
	return 0
}

type GetExistBuildingByAddressRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AdrData *AddressData `protobuf:"bytes,1,opt,name=AdrData,proto3" json:"AdrData,omitempty"`
}

func (x *GetExistBuildingByAddressRequest) Reset() {
	*x = GetExistBuildingByAddressRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_advert_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetExistBuildingByAddressRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetExistBuildingByAddressRequest) ProtoMessage() {}

func (x *GetExistBuildingByAddressRequest) ProtoReflect() protoreflect.Message {
	mi := &file_advert_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetExistBuildingByAddressRequest.ProtoReflect.Descriptor instead.
func (*GetExistBuildingByAddressRequest) Descriptor() ([]byte, []int) {
	return file_advert_proto_rawDescGZIP(), []int{22}
}

func (x *GetExistBuildingByAddressRequest) GetAdrData() *AddressData {
	if x != nil {
		return x.AdrData
	}
	return nil
}

type GetExistBuildingByAddressResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ComplexName  string           `protobuf:"bytes,1,opt,name=ComplexName,proto3" json:"ComplexName,omitempty"`
	Floor        int32            `protobuf:"varint,2,opt,name=Floor,proto3" json:"Floor,omitempty"`
	Material     MaterialBuilding `protobuf:"varint,3,opt,name=Material,proto3,enum=adverts.MaterialBuilding" json:"Material,omitempty"`
	YearCreation int32            `protobuf:"varint,4,opt,name=YearCreation,proto3" json:"YearCreation,omitempty"`
	RespCode     int32            `protobuf:"varint,5,opt,name=RespCode,proto3" json:"RespCode,omitempty"`
}

func (x *GetExistBuildingByAddressResponse) Reset() {
	*x = GetExistBuildingByAddressResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_advert_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetExistBuildingByAddressResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetExistBuildingByAddressResponse) ProtoMessage() {}

func (x *GetExistBuildingByAddressResponse) ProtoReflect() protoreflect.Message {
	mi := &file_advert_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetExistBuildingByAddressResponse.ProtoReflect.Descriptor instead.
func (*GetExistBuildingByAddressResponse) Descriptor() ([]byte, []int) {
	return file_advert_proto_rawDescGZIP(), []int{23}
}

func (x *GetExistBuildingByAddressResponse) GetComplexName() string {
	if x != nil {
		return x.ComplexName
	}
	return ""
}

func (x *GetExistBuildingByAddressResponse) GetFloor() int32 {
	if x != nil {
		return x.Floor
	}
	return 0
}

func (x *GetExistBuildingByAddressResponse) GetMaterial() MaterialBuilding {
	if x != nil {
		return x.Material
	}
	return MaterialBuilding_MATERIAL_BRICK
}

func (x *GetExistBuildingByAddressResponse) GetYearCreation() int32 {
	if x != nil {
		return x.YearCreation
	}
	return 0
}

func (x *GetExistBuildingByAddressResponse) GetRespCode() int32 {
	if x != nil {
		return x.RespCode
	}
	return 0
}

type CreateFlatAdvertRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId         int64            `protobuf:"varint,1,opt,name=UserId,proto3" json:"UserId,omitempty"`
	TypeSale       string           `protobuf:"bytes,2,opt,name=TypeSale,proto3" json:"TypeSale,omitempty"`
	Title          string           `protobuf:"bytes,3,opt,name=Title,proto3" json:"Title,omitempty"`
	Description    string           `protobuf:"bytes,4,opt,name=Description,proto3" json:"Description,omitempty"`
	Phone          string           `protobuf:"bytes,5,opt,name=Phone,proto3" json:"Phone,omitempty"`
	IsAgent        bool             `protobuf:"varint,6,opt,name=IsAgent,proto3" json:"IsAgent,omitempty"`
	CreateFlatProp *FlatProperties  `protobuf:"bytes,7,opt,name=CreateFlatProp,proto3" json:"CreateFlatProp,omitempty"`
	Price          int64            `protobuf:"varint,8,opt,name=Price,proto3" json:"Price,omitempty"`
	Material       MaterialBuilding `protobuf:"varint,9,opt,name=Material,proto3,enum=adverts.MaterialBuilding" json:"Material,omitempty"`
	Address        *AddressData     `protobuf:"bytes,10,opt,name=Address,proto3" json:"Address,omitempty"`
	YearCreation   int32            `protobuf:"varint,11,opt,name=YearCreation,proto3" json:"YearCreation,omitempty"`
}

func (x *CreateFlatAdvertRequest) Reset() {
	*x = CreateFlatAdvertRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_advert_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateFlatAdvertRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateFlatAdvertRequest) ProtoMessage() {}

func (x *CreateFlatAdvertRequest) ProtoReflect() protoreflect.Message {
	mi := &file_advert_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateFlatAdvertRequest.ProtoReflect.Descriptor instead.
func (*CreateFlatAdvertRequest) Descriptor() ([]byte, []int) {
	return file_advert_proto_rawDescGZIP(), []int{24}
}

func (x *CreateFlatAdvertRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *CreateFlatAdvertRequest) GetTypeSale() string {
	if x != nil {
		return x.TypeSale
	}
	return ""
}

func (x *CreateFlatAdvertRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *CreateFlatAdvertRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *CreateFlatAdvertRequest) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *CreateFlatAdvertRequest) GetIsAgent() bool {
	if x != nil {
		return x.IsAgent
	}
	return false
}

func (x *CreateFlatAdvertRequest) GetCreateFlatProp() *FlatProperties {
	if x != nil {
		return x.CreateFlatProp
	}
	return nil
}

func (x *CreateFlatAdvertRequest) GetPrice() int64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *CreateFlatAdvertRequest) GetMaterial() MaterialBuilding {
	if x != nil {
		return x.Material
	}
	return MaterialBuilding_MATERIAL_BRICK
}

func (x *CreateFlatAdvertRequest) GetAddress() *AddressData {
	if x != nil {
		return x.Address
	}
	return nil
}

func (x *CreateFlatAdvertRequest) GetYearCreation() int32 {
	if x != nil {
		return x.YearCreation
	}
	return 0
}

type CreateFlatAdvertResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           int64  `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
	UserId       int64  `protobuf:"varint,2,opt,name=UserId,proto3" json:"UserId,omitempty"`
	TypeSale     string `protobuf:"bytes,3,opt,name=TypeSale,proto3" json:"TypeSale,omitempty"`
	Title        string `protobuf:"bytes,4,opt,name=Title,proto3" json:"Title,omitempty"`
	Description  string `protobuf:"bytes,5,opt,name=Description,proto3" json:"Description,omitempty"`
	Phone        string `protobuf:"bytes,6,opt,name=Phone,proto3" json:"Phone,omitempty"`
	IsAgent      bool   `protobuf:"varint,7,opt,name=IsAgent,proto3" json:"IsAgent,omitempty"`
	Priority     int64  `protobuf:"varint,8,opt,name=Priority,proto3" json:"Priority,omitempty"`
	DateCreation string `protobuf:"bytes,9,opt,name=DateCreation,proto3" json:"DateCreation,omitempty"`
	RespCode     int32  `protobuf:"varint,10,opt,name=RespCode,proto3" json:"RespCode,omitempty"`
}

func (x *CreateFlatAdvertResponse) Reset() {
	*x = CreateFlatAdvertResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_advert_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateFlatAdvertResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateFlatAdvertResponse) ProtoMessage() {}

func (x *CreateFlatAdvertResponse) ProtoReflect() protoreflect.Message {
	mi := &file_advert_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateFlatAdvertResponse.ProtoReflect.Descriptor instead.
func (*CreateFlatAdvertResponse) Descriptor() ([]byte, []int) {
	return file_advert_proto_rawDescGZIP(), []int{25}
}

func (x *CreateFlatAdvertResponse) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CreateFlatAdvertResponse) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *CreateFlatAdvertResponse) GetTypeSale() string {
	if x != nil {
		return x.TypeSale
	}
	return ""
}

func (x *CreateFlatAdvertResponse) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *CreateFlatAdvertResponse) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *CreateFlatAdvertResponse) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *CreateFlatAdvertResponse) GetIsAgent() bool {
	if x != nil {
		return x.IsAgent
	}
	return false
}

func (x *CreateFlatAdvertResponse) GetPriority() int64 {
	if x != nil {
		return x.Priority
	}
	return 0
}

func (x *CreateFlatAdvertResponse) GetDateCreation() string {
	if x != nil {
		return x.DateCreation
	}
	return ""
}

func (x *CreateFlatAdvertResponse) GetRespCode() int32 {
	if x != nil {
		return x.RespCode
	}
	return 0
}

type GetSquareAdvertsListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PageSize int64 `protobuf:"varint,1,opt,name=PageSize,proto3" json:"PageSize,omitempty"`
	Offset   int64 `protobuf:"varint,2,opt,name=Offset,proto3" json:"Offset,omitempty"`
}

func (x *GetSquareAdvertsListRequest) Reset() {
	*x = GetSquareAdvertsListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_advert_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSquareAdvertsListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSquareAdvertsListRequest) ProtoMessage() {}

func (x *GetSquareAdvertsListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_advert_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSquareAdvertsListRequest.ProtoReflect.Descriptor instead.
func (*GetSquareAdvertsListRequest) Descriptor() ([]byte, []int) {
	return file_advert_proto_rawDescGZIP(), []int{26}
}

func (x *GetSquareAdvertsListRequest) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *GetSquareAdvertsListRequest) GetOffset() int64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

type AdvertSquareData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           int64            `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
	TypeAdvert   string           `protobuf:"bytes,2,opt,name=TypeAdvert,proto3" json:"TypeAdvert,omitempty"`
	Photo        string           `protobuf:"bytes,3,opt,name=Photo,proto3" json:"Photo,omitempty"`
	TypeSale     string           `protobuf:"bytes,4,opt,name=TypeSale,proto3" json:"TypeSale,omitempty"`
	Address      string           `protobuf:"bytes,5,opt,name=Address,proto3" json:"Address,omitempty"`
	Metro        string           `protobuf:"bytes,6,opt,name=Metro,proto3" json:"Metro,omitempty"`
	HouseProp    *HouseProperties `protobuf:"bytes,7,opt,name=HouseProp,proto3" json:"HouseProp,omitempty"`
	FlatProp     *FlatProperties  `protobuf:"bytes,8,opt,name=FlatProp,proto3" json:"FlatProp,omitempty"`
	Price        int64            `protobuf:"varint,9,opt,name=Price,proto3" json:"Price,omitempty"`
	DateCreation string           `protobuf:"bytes,10,opt,name=DateCreation,proto3" json:"DateCreation,omitempty"`
}

func (x *AdvertSquareData) Reset() {
	*x = AdvertSquareData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_advert_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdvertSquareData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdvertSquareData) ProtoMessage() {}

func (x *AdvertSquareData) ProtoReflect() protoreflect.Message {
	mi := &file_advert_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdvertSquareData.ProtoReflect.Descriptor instead.
func (*AdvertSquareData) Descriptor() ([]byte, []int) {
	return file_advert_proto_rawDescGZIP(), []int{27}
}

func (x *AdvertSquareData) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *AdvertSquareData) GetTypeAdvert() string {
	if x != nil {
		return x.TypeAdvert
	}
	return ""
}

func (x *AdvertSquareData) GetPhoto() string {
	if x != nil {
		return x.Photo
	}
	return ""
}

func (x *AdvertSquareData) GetTypeSale() string {
	if x != nil {
		return x.TypeSale
	}
	return ""
}

func (x *AdvertSquareData) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *AdvertSquareData) GetMetro() string {
	if x != nil {
		return x.Metro
	}
	return ""
}

func (x *AdvertSquareData) GetHouseProp() *HouseProperties {
	if x != nil {
		return x.HouseProp
	}
	return nil
}

func (x *AdvertSquareData) GetFlatProp() *FlatProperties {
	if x != nil {
		return x.FlatProp
	}
	return nil
}

func (x *AdvertSquareData) GetPrice() int64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *AdvertSquareData) GetDateCreation() string {
	if x != nil {
		return x.DateCreation
	}
	return ""
}

type GetSquareAdvertsListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SquareData []*AdvertSquareData `protobuf:"bytes,1,rep,name=SquareData,proto3" json:"SquareData,omitempty"`
	RespCode   int32               `protobuf:"varint,2,opt,name=RespCode,proto3" json:"RespCode,omitempty"`
}

func (x *GetSquareAdvertsListResponse) Reset() {
	*x = GetSquareAdvertsListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_advert_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSquareAdvertsListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSquareAdvertsListResponse) ProtoMessage() {}

func (x *GetSquareAdvertsListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_advert_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSquareAdvertsListResponse.ProtoReflect.Descriptor instead.
func (*GetSquareAdvertsListResponse) Descriptor() ([]byte, []int) {
	return file_advert_proto_rawDescGZIP(), []int{28}
}

func (x *GetSquareAdvertsListResponse) GetSquareData() []*AdvertSquareData {
	if x != nil {
		return x.SquareData
	}
	return nil
}

func (x *GetSquareAdvertsListResponse) GetRespCode() int32 {
	if x != nil {
		return x.RespCode
	}
	return 0
}

type GetUserAdvertsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId int64 `protobuf:"varint,1,opt,name=UserId,proto3" json:"UserId,omitempty"`
	Page   int64 `protobuf:"varint,2,opt,name=Page,proto3" json:"Page,omitempty"`
	Size   int64 `protobuf:"varint,3,opt,name=Size,proto3" json:"Size,omitempty"`
}

func (x *GetUserAdvertsRequest) Reset() {
	*x = GetUserAdvertsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_advert_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserAdvertsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserAdvertsRequest) ProtoMessage() {}

func (x *GetUserAdvertsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_advert_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserAdvertsRequest.ProtoReflect.Descriptor instead.
func (*GetUserAdvertsRequest) Descriptor() ([]byte, []int) {
	return file_advert_proto_rawDescGZIP(), []int{29}
}

func (x *GetUserAdvertsRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *GetUserAdvertsRequest) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetUserAdvertsRequest) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

type GetUserAdvertsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RectDataSlice []*AdvertRectangleData `protobuf:"bytes,1,rep,name=RectDataSlice,proto3" json:"RectDataSlice,omitempty"`
	RespCode      int32                  `protobuf:"varint,2,opt,name=RespCode,proto3" json:"RespCode,omitempty"`
}

func (x *GetUserAdvertsResponse) Reset() {
	*x = GetUserAdvertsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_advert_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserAdvertsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserAdvertsResponse) ProtoMessage() {}

func (x *GetUserAdvertsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_advert_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserAdvertsResponse.ProtoReflect.Descriptor instead.
func (*GetUserAdvertsResponse) Descriptor() ([]byte, []int) {
	return file_advert_proto_rawDescGZIP(), []int{30}
}

func (x *GetUserAdvertsResponse) GetRectDataSlice() []*AdvertRectangleData {
	if x != nil {
		return x.RectDataSlice
	}
	return nil
}

func (x *GetUserAdvertsResponse) GetRespCode() int32 {
	if x != nil {
		return x.RespCode
	}
	return 0
}

type GetLikedUserAdvertsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId   int64 `protobuf:"varint,1,opt,name=UserId,proto3" json:"UserId,omitempty"`
	PageSize int64 `protobuf:"varint,2,opt,name=PageSize,proto3" json:"PageSize,omitempty"`
	Offset   int64 `protobuf:"varint,3,opt,name=Offset,proto3" json:"Offset,omitempty"`
}

func (x *GetLikedUserAdvertsRequest) Reset() {
	*x = GetLikedUserAdvertsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_advert_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLikedUserAdvertsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLikedUserAdvertsRequest) ProtoMessage() {}

func (x *GetLikedUserAdvertsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_advert_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLikedUserAdvertsRequest.ProtoReflect.Descriptor instead.
func (*GetLikedUserAdvertsRequest) Descriptor() ([]byte, []int) {
	return file_advert_proto_rawDescGZIP(), []int{31}
}

func (x *GetLikedUserAdvertsRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *GetLikedUserAdvertsRequest) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *GetLikedUserAdvertsRequest) GetOffset() int64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

type GetLikedUserAdvertsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RectDataSlice []*AdvertRectangleData `protobuf:"bytes,1,rep,name=RectDataSlice,proto3" json:"RectDataSlice,omitempty"`
	RespCode      int32                  `protobuf:"varint,2,opt,name=RespCode,proto3" json:"RespCode,omitempty"`
}

func (x *GetLikedUserAdvertsResponse) Reset() {
	*x = GetLikedUserAdvertsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_advert_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLikedUserAdvertsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLikedUserAdvertsResponse) ProtoMessage() {}

func (x *GetLikedUserAdvertsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_advert_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLikedUserAdvertsResponse.ProtoReflect.Descriptor instead.
func (*GetLikedUserAdvertsResponse) Descriptor() ([]byte, []int) {
	return file_advert_proto_rawDescGZIP(), []int{32}
}

func (x *GetLikedUserAdvertsResponse) GetRectDataSlice() []*AdvertRectangleData {
	if x != nil {
		return x.RectDataSlice
	}
	return nil
}

func (x *GetLikedUserAdvertsResponse) GetRespCode() int32 {
	if x != nil {
		return x.RespCode
	}
	return 0
}

type GetComplexAdvertsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ComplexId int64 `protobuf:"varint,1,opt,name=ComplexId,proto3" json:"ComplexId,omitempty"`
	PageSize  int64 `protobuf:"varint,2,opt,name=PageSize,proto3" json:"PageSize,omitempty"`
	Offset    int64 `protobuf:"varint,3,opt,name=Offset,proto3" json:"Offset,omitempty"`
}

func (x *GetComplexAdvertsRequest) Reset() {
	*x = GetComplexAdvertsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_advert_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetComplexAdvertsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetComplexAdvertsRequest) ProtoMessage() {}

func (x *GetComplexAdvertsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_advert_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetComplexAdvertsRequest.ProtoReflect.Descriptor instead.
func (*GetComplexAdvertsRequest) Descriptor() ([]byte, []int) {
	return file_advert_proto_rawDescGZIP(), []int{33}
}

func (x *GetComplexAdvertsRequest) GetComplexId() int64 {
	if x != nil {
		return x.ComplexId
	}
	return 0
}

func (x *GetComplexAdvertsRequest) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *GetComplexAdvertsRequest) GetOffset() int64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

type GetComplexAdvertsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RectDataSlice []*AdvertRectangleData `protobuf:"bytes,1,rep,name=RectDataSlice,proto3" json:"RectDataSlice,omitempty"`
	RespCode      int32                  `protobuf:"varint,2,opt,name=RespCode,proto3" json:"RespCode,omitempty"`
}

func (x *GetComplexAdvertsResponse) Reset() {
	*x = GetComplexAdvertsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_advert_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetComplexAdvertsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetComplexAdvertsResponse) ProtoMessage() {}

func (x *GetComplexAdvertsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_advert_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetComplexAdvertsResponse.ProtoReflect.Descriptor instead.
func (*GetComplexAdvertsResponse) Descriptor() ([]byte, []int) {
	return file_advert_proto_rawDescGZIP(), []int{34}
}

func (x *GetComplexAdvertsResponse) GetRectDataSlice() []*AdvertRectangleData {
	if x != nil {
		return x.RectDataSlice
	}
	return nil
}

func (x *GetComplexAdvertsResponse) GetRespCode() int32 {
	if x != nil {
		return x.RespCode
	}
	return 0
}

var File_advert_proto protoreflect.FileDescriptor

var file_advert_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x61, 0x64, 0x76, 0x65, 0x72, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07,
	0x61, 0x64, 0x76, 0x65, 0x72, 0x74, 0x73, 0x22, 0x26, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x41, 0x64,
	0x76, 0x65, 0x72, 0x74, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x49, 0x64, 0x22,
	0xa5, 0x01, 0x0a, 0x0b, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x44, 0x61, 0x74, 0x61, 0x12,
	0x1a, 0x0a, 0x08, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x54,
	0x6f, 0x77, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x54, 0x6f, 0x77, 0x6e, 0x12,
	0x16, 0x0a, 0x06, 0x53, 0x74, 0x72, 0x65, 0x65, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x53, 0x74, 0x72, 0x65, 0x65, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x48, 0x6f, 0x75, 0x73, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x48, 0x6f, 0x75, 0x73, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x4d, 0x65, 0x74, 0x72, 0x6f, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x4d, 0x65,
	0x74, 0x72, 0x6f, 0x12, 0x22, 0x0a, 0x0c, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x50, 0x6f,
	0x69, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x41, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x22, 0x4d, 0x0a, 0x09, 0x49, 0x6d, 0x61, 0x67, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x02, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x72,
	0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x50, 0x72,
	0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x22, 0x4b, 0x0a, 0x0f, 0x50, 0x72, 0x69, 0x63, 0x65, 0x43,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x14, 0x0a, 0x05, 0x50, 0x72, 0x69,
	0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12,
	0x22, 0x0a, 0x0c, 0x44, 0x61, 0x74, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x44, 0x61, 0x74, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x22, 0x9f, 0x01, 0x0a, 0x17, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x78, 0x41,
	0x64, 0x76, 0x65, 0x72, 0x74, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x12,
	0x1c, 0x0a, 0x09, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x78, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x78, 0x49, 0x64, 0x12, 0x20, 0x0a,
	0x0b, 0x4e, 0x61, 0x6d, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x78, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x4e, 0x61, 0x6d, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x78, 0x12,
	0x22, 0x0a, 0x0c, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x43, 0x6f, 0x6d, 0x70,
	0x61, 0x6e, 0x79, 0x12, 0x20, 0x0a, 0x0b, 0x4e, 0x61, 0x6d, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x61,
	0x6e, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x4e, 0x61, 0x6d, 0x65, 0x43, 0x6f,
	0x6d, 0x70, 0x61, 0x6e, 0x79, 0x22, 0x80, 0x02, 0x0a, 0x0e, 0x46, 0x6c, 0x61, 0x74, 0x50, 0x72,
	0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x46, 0x6c, 0x6f, 0x6f,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x46, 0x6c, 0x6f, 0x6f, 0x72, 0x12, 0x24,
	0x0a, 0x0d, 0x43, 0x65, 0x69, 0x6c, 0x69, 0x6e, 0x67, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0d, 0x43, 0x65, 0x69, 0x6c, 0x69, 0x6e, 0x67, 0x48, 0x65,
	0x69, 0x67, 0x68, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x53, 0x71, 0x75, 0x61, 0x72, 0x65, 0x47, 0x65,
	0x6e, 0x65, 0x72, 0x61, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0d, 0x53, 0x71, 0x75,
	0x61, 0x72, 0x65, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x12, 0x1c, 0x0a, 0x09, 0x52, 0x6f,
	0x6f, 0x6d, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x52,
	0x6f, 0x6f, 0x6d, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x2c, 0x0a, 0x11, 0x53, 0x71, 0x75, 0x61,
	0x72, 0x65, 0x52, 0x65, 0x73, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x11, 0x53, 0x71, 0x75, 0x61, 0x72, 0x65, 0x52, 0x65, 0x73, 0x69, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x12, 0x1c, 0x0a, 0x09, 0x41, 0x70, 0x61, 0x72, 0x74, 0x6d,
	0x65, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x41, 0x70, 0x61, 0x72, 0x74,
	0x6d, 0x65, 0x6e, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x46, 0x6c, 0x6f, 0x6f, 0x72, 0x47, 0x65, 0x6e,
	0x65, 0x72, 0x61, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x46, 0x6c, 0x6f, 0x6f,
	0x72, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x22, 0xc1, 0x02, 0x0a, 0x0f, 0x48, 0x6f, 0x75,
	0x73, 0x65, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x12, 0x24, 0x0a, 0x0d,
	0x43, 0x65, 0x69, 0x6c, 0x69, 0x6e, 0x67, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x0d, 0x43, 0x65, 0x69, 0x6c, 0x69, 0x6e, 0x67, 0x48, 0x65, 0x69, 0x67,
	0x68, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x53, 0x71, 0x75, 0x61, 0x72, 0x65, 0x41, 0x72, 0x65, 0x61,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0a, 0x53, 0x71, 0x75, 0x61, 0x72, 0x65, 0x41, 0x72,
	0x65, 0x61, 0x12, 0x20, 0x0a, 0x0b, 0x53, 0x71, 0x75, 0x61, 0x72, 0x65, 0x48, 0x6f, 0x75, 0x73,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0b, 0x53, 0x71, 0x75, 0x61, 0x72, 0x65, 0x48,
	0x6f, 0x75, 0x73, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x42, 0x65, 0x64, 0x72, 0x6f, 0x6f, 0x6d, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x42, 0x65, 0x64, 0x72,
	0x6f, 0x6f, 0x6d, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x38, 0x0a, 0x0a, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x41, 0x72, 0x65, 0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e, 0x61,
	0x64, 0x76, 0x65, 0x72, 0x74, 0x73, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x41, 0x72, 0x65,
	0x61, 0x48, 0x6f, 0x75, 0x73, 0x65, 0x52, 0x0a, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x41, 0x72,
	0x65, 0x61, 0x12, 0x18, 0x0a, 0x07, 0x43, 0x6f, 0x74, 0x74, 0x61, 0x67, 0x65, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x07, 0x43, 0x6f, 0x74, 0x74, 0x61, 0x67, 0x65, 0x12, 0x38, 0x0a, 0x0a,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x48, 0x6f, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x18, 0x2e, 0x61, 0x64, 0x76, 0x65, 0x72, 0x74, 0x73, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x48, 0x6f, 0x6d, 0x65, 0x48, 0x6f, 0x75, 0x73, 0x65, 0x52, 0x0a, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x48, 0x6f, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x46, 0x6c, 0x6f, 0x6f, 0x72, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x46, 0x6c, 0x6f, 0x6f, 0x72, 0x22, 0xdd, 0x06, 0x0a,
	0x15, 0x47, 0x65, 0x74, 0x41, 0x64, 0x76, 0x65, 0x72, 0x74, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x02, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x41, 0x64, 0x76, 0x65, 0x72, 0x74,
	0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x41, 0x64, 0x76, 0x65,
	0x72, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x54, 0x79, 0x70, 0x65, 0x53, 0x61,
	0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x54, 0x79, 0x70, 0x65, 0x53, 0x61,
	0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x44, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x44,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x56, 0x69, 0x65, 0x77, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x56, 0x69, 0x65, 0x77, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x4c, 0x69, 0x6b, 0x65, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x4c, 0x69, 0x6b, 0x65, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x50, 0x72,
	0x69, 0x63, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x50, 0x72, 0x69, 0x63, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x49, 0x73, 0x4c, 0x69, 0x6b, 0x65,
	0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x49, 0x73, 0x4c, 0x69, 0x6b, 0x65, 0x64,
	0x12, 0x18, 0x0a, 0x07, 0x49, 0x73, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x07, 0x49, 0x73, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x4d, 0x65,
	0x74, 0x72, 0x6f, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x4d, 0x65, 0x74, 0x72, 0x6f,
	0x12, 0x18, 0x0a, 0x07, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x0d, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x41, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x3c,
	0x0a, 0x0c, 0x50, 0x72, 0x69, 0x63, 0x65, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x18, 0x0f,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x61, 0x64, 0x76, 0x65, 0x72, 0x74, 0x73, 0x2e, 0x50,
	0x72, 0x69, 0x63, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x0c,
	0x50, 0x72, 0x69, 0x63, 0x65, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x2a, 0x0a, 0x06,
	0x49, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x18, 0x10, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x61,
	0x64, 0x76, 0x65, 0x72, 0x74, 0x73, 0x2e, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x52, 0x06, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x12, 0x36, 0x0a, 0x09, 0x48, 0x6f, 0x75, 0x73,
	0x65, 0x50, 0x72, 0x6f, 0x70, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x61, 0x64,
	0x76, 0x65, 0x72, 0x74, 0x73, 0x2e, 0x48, 0x6f, 0x75, 0x73, 0x65, 0x50, 0x72, 0x6f, 0x70, 0x65,
	0x72, 0x74, 0x69, 0x65, 0x73, 0x52, 0x09, 0x48, 0x6f, 0x75, 0x73, 0x65, 0x50, 0x72, 0x6f, 0x70,
	0x12, 0x3f, 0x0a, 0x0e, 0x46, 0x6c, 0x61, 0x74, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69,
	0x65, 0x73, 0x18, 0x12, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x61, 0x64, 0x76, 0x65, 0x72,
	0x74, 0x73, 0x2e, 0x46, 0x6c, 0x61, 0x74, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65,
	0x73, 0x52, 0x0e, 0x46, 0x6c, 0x61, 0x74, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65,
	0x73, 0x12, 0x22, 0x0a, 0x0c, 0x59, 0x65, 0x61, 0x72, 0x43, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x13, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x59, 0x65, 0x61, 0x72, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x35, 0x0a, 0x08, 0x4d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61,
	0x6c, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x19, 0x2e, 0x61, 0x64, 0x76, 0x65, 0x72, 0x74,
	0x73, 0x2e, 0x4d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x69,
	0x6e, 0x67, 0x52, 0x08, 0x4d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x12, 0x4e, 0x0a, 0x11,
	0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x78, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65,
	0x73, 0x18, 0x15, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x61, 0x64, 0x76, 0x65, 0x72, 0x74,
	0x73, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x78, 0x41, 0x64, 0x76, 0x65, 0x72, 0x74, 0x50,
	0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x52, 0x11, 0x43, 0x6f, 0x6d, 0x70, 0x6c,
	0x65, 0x78, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x12, 0x22, 0x0a, 0x0c,
	0x44, 0x61, 0x74, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x16, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x44, 0x61, 0x74, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x1a, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x17, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x08, 0x52, 0x65, 0x73, 0x70, 0x43, 0x6f, 0x64, 0x65, 0x22, 0xf4, 0x01, 0x0a,
	0x1e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x63, 0x74, 0x61, 0x6e, 0x67, 0x6c, 0x65, 0x41, 0x64, 0x76,
	0x65, 0x72, 0x74, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x12, 0x0a, 0x04, 0x50, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x50,
	0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x04, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x41, 0x64, 0x76, 0x65, 0x72,
	0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x41, 0x64, 0x76,
	0x65, 0x72, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x4d, 0x69, 0x6e, 0x50, 0x72,
	0x69, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x4d, 0x69, 0x6e, 0x50, 0x72,
	0x69, 0x63, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x4d, 0x61, 0x78, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x4d, 0x61, 0x78, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x44, 0x65, 0x61, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x44, 0x65, 0x61, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x52,
	0x6f, 0x6f, 0x6d, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09,
	0x52, 0x6f, 0x6f, 0x6d, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x41, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x41, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x22, 0xe6, 0x03, 0x0a, 0x13, 0x41, 0x64, 0x76, 0x65, 0x72, 0x74, 0x52, 0x65,
	0x63, 0x74, 0x61, 0x6e, 0x67, 0x6c, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x0e, 0x0a, 0x02, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x41,
	0x64, 0x76, 0x65, 0x72, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x41, 0x64, 0x76, 0x65, 0x72, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x54,
	0x79, 0x70, 0x65, 0x53, 0x61, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x54,
	0x79, 0x70, 0x65, 0x53, 0x61, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x69, 0x74, 0x6c, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x20, 0x0a,
	0x0b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x14, 0x0a, 0x05, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05,
	0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x49,
	0x73, 0x4c, 0x69, 0x6b, 0x65, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x49, 0x73,
	0x4c, 0x69, 0x6b, 0x65, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x4d, 0x65, 0x74, 0x72, 0x6f, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x4d, 0x65, 0x74, 0x72, 0x6f, 0x12, 0x18, 0x0a, 0x07, 0x41,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x41, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x50, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x41, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x50, 0x68, 0x6f,
	0x74, 0x6f, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x12,
	0x36, 0x0a, 0x09, 0x48, 0x6f, 0x75, 0x73, 0x65, 0x50, 0x72, 0x6f, 0x70, 0x18, 0x0d, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x18, 0x2e, 0x61, 0x64, 0x76, 0x65, 0x72, 0x74, 0x73, 0x2e, 0x48, 0x6f, 0x75,
	0x73, 0x65, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x52, 0x09, 0x48, 0x6f,
	0x75, 0x73, 0x65, 0x50, 0x72, 0x6f, 0x70, 0x12, 0x3f, 0x0a, 0x0e, 0x46, 0x6c, 0x61, 0x74, 0x50,
	0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x17, 0x2e, 0x61, 0x64, 0x76, 0x65, 0x72, 0x74, 0x73, 0x2e, 0x46, 0x6c, 0x61, 0x74, 0x50, 0x72,
	0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x52, 0x0e, 0x46, 0x6c, 0x61, 0x74, 0x50, 0x72,
	0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x44, 0x61, 0x74, 0x65,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x44, 0x61, 0x74, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x8e, 0x01, 0x0a,
	0x08, 0x50, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x24, 0x0a, 0x0d, 0x54, 0x6f, 0x74,
	0x61, 0x6c, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0d, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12,
	0x1e, 0x0a, 0x0a, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x50, 0x61, 0x67, 0x65, 0x73, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0a, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x50, 0x61, 0x67, 0x65, 0x73, 0x12,
	0x20, 0x0a, 0x0b, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x50, 0x61, 0x67, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x50, 0x61, 0x67,
	0x65, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x08, 0x50, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x22, 0x9c, 0x01,
	0x0a, 0x1f, 0x47, 0x65, 0x74, 0x52, 0x65, 0x63, 0x74, 0x61, 0x6e, 0x67, 0x6c, 0x65, 0x41, 0x64,
	0x76, 0x65, 0x72, 0x74, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x36, 0x0a, 0x07, 0x41, 0x64, 0x76, 0x65, 0x72, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x61, 0x64, 0x76, 0x65, 0x72, 0x74, 0x73, 0x2e, 0x41, 0x64, 0x76,
	0x65, 0x72, 0x74, 0x52, 0x65, 0x63, 0x74, 0x61, 0x6e, 0x67, 0x6c, 0x65, 0x44, 0x61, 0x74, 0x61,
	0x52, 0x07, 0x41, 0x64, 0x76, 0x65, 0x72, 0x74, 0x73, 0x12, 0x25, 0x0a, 0x04, 0x49, 0x6e, 0x66,
	0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x61, 0x64, 0x76, 0x65, 0x72, 0x74,
	0x73, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x1a, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x08, 0x52, 0x65, 0x73, 0x70, 0x43, 0x6f, 0x64, 0x65, 0x22, 0xe7, 0x03, 0x0a,
	0x17, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x64, 0x76, 0x65, 0x72, 0x74, 0x42, 0x79, 0x49,
	0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x41, 0x64, 0x76, 0x65,
	0x72, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x41, 0x64,
	0x76, 0x65, 0x72, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x54, 0x79, 0x70, 0x65,
	0x53, 0x61, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x54, 0x79, 0x70, 0x65,
	0x53, 0x61, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x44, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05,
	0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x50, 0x72, 0x69,
	0x63, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x69, 0x73, 0x41, 0x67,
	0x65, 0x6e, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x69, 0x73, 0x41, 0x67, 0x65,
	0x6e, 0x74, 0x12, 0x2e, 0x0a, 0x07, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x61, 0x64, 0x76, 0x65, 0x72, 0x74, 0x73, 0x2e, 0x41, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x44, 0x61, 0x74, 0x61, 0x52, 0x07, 0x41, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x12, 0x36, 0x0a, 0x09, 0x48, 0x6f, 0x75, 0x73, 0x65, 0x50, 0x72, 0x6f, 0x70, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x61, 0x64, 0x76, 0x65, 0x72, 0x74, 0x73, 0x2e,
	0x48, 0x6f, 0x75, 0x73, 0x65, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x52,
	0x09, 0x48, 0x6f, 0x75, 0x73, 0x65, 0x50, 0x72, 0x6f, 0x70, 0x12, 0x3f, 0x0a, 0x0e, 0x46, 0x6c,
	0x61, 0x74, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x17, 0x2e, 0x61, 0x64, 0x76, 0x65, 0x72, 0x74, 0x73, 0x2e, 0x46, 0x6c, 0x61,
	0x74, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x52, 0x0e, 0x46, 0x6c, 0x61,
	0x74, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x59,
	0x65, 0x61, 0x72, 0x43, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0c, 0x59, 0x65, 0x61, 0x72, 0x43, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x35, 0x0a, 0x08, 0x4d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x18, 0x0d, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x19, 0x2e, 0x61, 0x64, 0x76, 0x65, 0x72, 0x74, 0x73, 0x2e, 0x4d, 0x61, 0x74, 0x65,
	0x72, 0x69, 0x61, 0x6c, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x69, 0x6e, 0x67, 0x52, 0x08, 0x4d, 0x61,
	0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x22, 0x36, 0x0a, 0x18, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x41, 0x64, 0x76, 0x65, 0x72, 0x74, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x52, 0x65, 0x73, 0x70, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x29,
	0x0a, 0x17, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x64, 0x76, 0x65, 0x72, 0x74, 0x42, 0x79,
	0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x49, 0x64, 0x22, 0x2a, 0x0a, 0x18, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x41, 0x64, 0x76, 0x65, 0x72, 0x74, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x4f, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x02, 0x4f, 0x6b, 0x22, 0x41, 0x0a, 0x11, 0x4c, 0x69, 0x6b, 0x65, 0x41, 0x64, 0x76,
	0x65, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x64,
	0x76, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x61, 0x64, 0x76, 0x49, 0x64,
	0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x30, 0x0a, 0x12, 0x4c, 0x69, 0x6b, 0x65,
	0x41, 0x64, 0x76, 0x65, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x08, 0x52, 0x65, 0x73, 0x70, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x44, 0x0a, 0x14, 0x44, 0x69,
	0x73, 0x6c, 0x69, 0x6b, 0x65, 0x41, 0x64, 0x76, 0x65, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x64, 0x76, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x05, 0x61, 0x64, 0x76, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x22, 0x33, 0x0a, 0x15, 0x44, 0x69, 0x73, 0x6c, 0x69, 0x6b, 0x65, 0x41, 0x64, 0x76, 0x65, 0x72,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x52, 0x65, 0x73,
	0x70, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x52, 0x65, 0x73,
	0x70, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x9b, 0x03, 0x0a, 0x18, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x48, 0x6f, 0x75, 0x73, 0x65, 0x41, 0x64, 0x76, 0x65, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x54, 0x79,
	0x70, 0x65, 0x53, 0x61, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x54, 0x79,
	0x70, 0x65, 0x53, 0x61, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x20, 0x0a, 0x0b,
	0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14,
	0x0a, 0x05, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x50,
	0x68, 0x6f, 0x6e, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x49, 0x73, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x49, 0x73, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x12, 0x42,
	0x0a, 0x0f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x48, 0x6f, 0x75, 0x73, 0x65, 0x50, 0x72, 0x6f,
	0x70, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x61, 0x64, 0x76, 0x65, 0x72, 0x74,
	0x73, 0x2e, 0x48, 0x6f, 0x75, 0x73, 0x65, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65,
	0x73, 0x52, 0x0f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x48, 0x6f, 0x75, 0x73, 0x65, 0x50, 0x72,
	0x6f, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x05, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x35, 0x0a, 0x08, 0x4d, 0x61, 0x74, 0x65,
	0x72, 0x69, 0x61, 0x6c, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x19, 0x2e, 0x61, 0x64, 0x76,
	0x65, 0x72, 0x74, 0x73, 0x2e, 0x4d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x42, 0x75, 0x69,
	0x6c, 0x64, 0x69, 0x6e, 0x67, 0x52, 0x08, 0x4d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x12,
	0x2e, 0x0a, 0x07, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x14, 0x2e, 0x61, 0x64, 0x76, 0x65, 0x72, 0x74, 0x73, 0x2e, 0x41, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x44, 0x61, 0x74, 0x61, 0x52, 0x07, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12,
	0x22, 0x0a, 0x0c, 0x59, 0x65, 0x61, 0x72, 0x43, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x59, 0x65, 0x61, 0x72, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x22, 0xa3, 0x02, 0x0a, 0x19, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x48, 0x6f,
	0x75, 0x73, 0x65, 0x41, 0x64, 0x76, 0x65, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x49,
	0x64, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x54, 0x79, 0x70,
	0x65, 0x53, 0x61, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x54, 0x79, 0x70,
	0x65, 0x53, 0x61, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x44,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a,
	0x05, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x50, 0x68,
	0x6f, 0x6e, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x49, 0x73, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x49, 0x73, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x12, 0x1a, 0x0a,
	0x08, 0x50, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x08, 0x50, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x12, 0x22, 0x0a, 0x0c, 0x44, 0x61, 0x74,
	0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x44, 0x61, 0x74, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a,
	0x08, 0x52, 0x65, 0x73, 0x70, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x08, 0x52, 0x65, 0x73, 0x70, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x52, 0x0a, 0x20, 0x47, 0x65, 0x74,
	0x45, 0x78, 0x69, 0x73, 0x74, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x69, 0x6e, 0x67, 0x42, 0x79, 0x41,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2e, 0x0a,
	0x07, 0x41, 0x64, 0x72, 0x44, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14,
	0x2e, 0x61, 0x64, 0x76, 0x65, 0x72, 0x74, 0x73, 0x2e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x44, 0x61, 0x74, 0x61, 0x52, 0x07, 0x41, 0x64, 0x72, 0x44, 0x61, 0x74, 0x61, 0x22, 0xd2, 0x01,
	0x0a, 0x21, 0x47, 0x65, 0x74, 0x45, 0x78, 0x69, 0x73, 0x74, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x69,
	0x6e, 0x67, 0x42, 0x79, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x78, 0x4e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65,
	0x78, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x46, 0x6c, 0x6f, 0x6f, 0x72, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x46, 0x6c, 0x6f, 0x6f, 0x72, 0x12, 0x35, 0x0a, 0x08, 0x4d,
	0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x19, 0x2e,
	0x61, 0x64, 0x76, 0x65, 0x72, 0x74, 0x73, 0x2e, 0x4d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c,
	0x42, 0x75, 0x69, 0x6c, 0x64, 0x69, 0x6e, 0x67, 0x52, 0x08, 0x4d, 0x61, 0x74, 0x65, 0x72, 0x69,
	0x61, 0x6c, 0x12, 0x22, 0x0a, 0x0c, 0x59, 0x65, 0x61, 0x72, 0x43, 0x72, 0x65, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x59, 0x65, 0x61, 0x72, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x43, 0x6f,
	0x64, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x52, 0x65, 0x73, 0x70, 0x43, 0x6f,
	0x64, 0x65, 0x22, 0x97, 0x03, 0x0a, 0x17, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x46, 0x6c, 0x61,
	0x74, 0x41, 0x64, 0x76, 0x65, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16,
	0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x54, 0x79, 0x70, 0x65, 0x53, 0x61,
	0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x54, 0x79, 0x70, 0x65, 0x53, 0x61,
	0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x44, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x44,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x50, 0x68,
	0x6f, 0x6e, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x50, 0x68, 0x6f, 0x6e, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x49, 0x73, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x07, 0x49, 0x73, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x12, 0x3f, 0x0a, 0x0e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x46, 0x6c, 0x61, 0x74, 0x50, 0x72, 0x6f, 0x70, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x17, 0x2e, 0x61, 0x64, 0x76, 0x65, 0x72, 0x74, 0x73, 0x2e, 0x46, 0x6c, 0x61,
	0x74, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x52, 0x0e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x46, 0x6c, 0x61, 0x74, 0x50, 0x72, 0x6f, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x50,
	0x72, 0x69, 0x63, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x50, 0x72, 0x69, 0x63,
	0x65, 0x12, 0x35, 0x0a, 0x08, 0x4d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x19, 0x2e, 0x61, 0x64, 0x76, 0x65, 0x72, 0x74, 0x73, 0x2e, 0x4d, 0x61,
	0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x69, 0x6e, 0x67, 0x52, 0x08,
	0x4d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x12, 0x2e, 0x0a, 0x07, 0x41, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x61, 0x64, 0x76, 0x65,
	0x72, 0x74, 0x73, 0x2e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x44, 0x61, 0x74, 0x61, 0x52,
	0x07, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x59, 0x65, 0x61, 0x72,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c,
	0x59, 0x65, 0x61, 0x72, 0x43, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xa2, 0x02, 0x0a,
	0x18, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x46, 0x6c, 0x61, 0x74, 0x41, 0x64, 0x76, 0x65, 0x72,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x1a, 0x0a, 0x08, 0x54, 0x79, 0x70, 0x65, 0x53, 0x61, 0x6c, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x54, 0x79, 0x70, 0x65, 0x53, 0x61, 0x6c, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x54, 0x69,
	0x74, 0x6c, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x49,
	0x73, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x49, 0x73,
	0x41, 0x67, 0x65, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74,
	0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x50, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74,
	0x79, 0x12, 0x22, 0x0a, 0x0c, 0x44, 0x61, 0x74, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x44, 0x61, 0x74, 0x65, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x43, 0x6f, 0x64,
	0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x52, 0x65, 0x73, 0x70, 0x43, 0x6f, 0x64,
	0x65, 0x22, 0x51, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x53, 0x71, 0x75, 0x61, 0x72, 0x65, 0x41, 0x64,
	0x76, 0x65, 0x72, 0x74, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1a, 0x0a, 0x08, 0x50, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x08, 0x50, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x4f, 0x66,
	0x66, 0x73, 0x65, 0x74, 0x22, 0xcb, 0x02, 0x0a, 0x10, 0x41, 0x64, 0x76, 0x65, 0x72, 0x74, 0x53,
	0x71, 0x75, 0x61, 0x72, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x54, 0x79, 0x70,
	0x65, 0x41, 0x64, 0x76, 0x65, 0x72, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x54,
	0x79, 0x70, 0x65, 0x41, 0x64, 0x76, 0x65, 0x72, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x50, 0x68, 0x6f,
	0x74, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x12,
	0x1a, 0x0a, 0x08, 0x54, 0x79, 0x70, 0x65, 0x53, 0x61, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x54, 0x79, 0x70, 0x65, 0x53, 0x61, 0x6c, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x41,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x41, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x4d, 0x65, 0x74, 0x72, 0x6f, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x4d, 0x65, 0x74, 0x72, 0x6f, 0x12, 0x36, 0x0a, 0x09, 0x48,
	0x6f, 0x75, 0x73, 0x65, 0x50, 0x72, 0x6f, 0x70, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18,
	0x2e, 0x61, 0x64, 0x76, 0x65, 0x72, 0x74, 0x73, 0x2e, 0x48, 0x6f, 0x75, 0x73, 0x65, 0x50, 0x72,
	0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x52, 0x09, 0x48, 0x6f, 0x75, 0x73, 0x65, 0x50,
	0x72, 0x6f, 0x70, 0x12, 0x33, 0x0a, 0x08, 0x46, 0x6c, 0x61, 0x74, 0x50, 0x72, 0x6f, 0x70, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x61, 0x64, 0x76, 0x65, 0x72, 0x74, 0x73, 0x2e,
	0x46, 0x6c, 0x61, 0x74, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x52, 0x08,
	0x46, 0x6c, 0x61, 0x74, 0x50, 0x72, 0x6f, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x50, 0x72, 0x69, 0x63,
	0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x22,
	0x0a, 0x0c, 0x44, 0x61, 0x74, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x44, 0x61, 0x74, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x22, 0x75, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x53, 0x71, 0x75, 0x61, 0x72, 0x65, 0x41,
	0x64, 0x76, 0x65, 0x72, 0x74, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x39, 0x0a, 0x0a, 0x53, 0x71, 0x75, 0x61, 0x72, 0x65, 0x44, 0x61, 0x74, 0x61,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x61, 0x64, 0x76, 0x65, 0x72, 0x74, 0x73,
	0x2e, 0x41, 0x64, 0x76, 0x65, 0x72, 0x74, 0x53, 0x71, 0x75, 0x61, 0x72, 0x65, 0x44, 0x61, 0x74,
	0x61, 0x52, 0x0a, 0x53, 0x71, 0x75, 0x61, 0x72, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1a, 0x0a,
	0x08, 0x52, 0x65, 0x73, 0x70, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x08, 0x52, 0x65, 0x73, 0x70, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x57, 0x0a, 0x15, 0x47, 0x65, 0x74,
	0x55, 0x73, 0x65, 0x72, 0x41, 0x64, 0x76, 0x65, 0x72, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x50, 0x61,
	0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x50, 0x61, 0x67, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x53, 0x69,
	0x7a, 0x65, 0x22, 0x78, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x41, 0x64, 0x76,
	0x65, 0x72, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x42, 0x0a, 0x0d,
	0x52, 0x65, 0x63, 0x74, 0x44, 0x61, 0x74, 0x61, 0x53, 0x6c, 0x69, 0x63, 0x65, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x61, 0x64, 0x76, 0x65, 0x72, 0x74, 0x73, 0x2e, 0x41, 0x64,
	0x76, 0x65, 0x72, 0x74, 0x52, 0x65, 0x63, 0x74, 0x61, 0x6e, 0x67, 0x6c, 0x65, 0x44, 0x61, 0x74,
	0x61, 0x52, 0x0d, 0x52, 0x65, 0x63, 0x74, 0x44, 0x61, 0x74, 0x61, 0x53, 0x6c, 0x69, 0x63, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x08, 0x52, 0x65, 0x73, 0x70, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x68, 0x0a, 0x1a,
	0x47, 0x65, 0x74, 0x4c, 0x69, 0x6b, 0x65, 0x64, 0x55, 0x73, 0x65, 0x72, 0x41, 0x64, 0x76, 0x65,
	0x72, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x50, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06,
	0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x22, 0x7d, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x6b,
	0x65, 0x64, 0x55, 0x73, 0x65, 0x72, 0x41, 0x64, 0x76, 0x65, 0x72, 0x74, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x42, 0x0a, 0x0d, 0x52, 0x65, 0x63, 0x74, 0x44, 0x61, 0x74,
	0x61, 0x53, 0x6c, 0x69, 0x63, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x61,
	0x64, 0x76, 0x65, 0x72, 0x74, 0x73, 0x2e, 0x41, 0x64, 0x76, 0x65, 0x72, 0x74, 0x52, 0x65, 0x63,
	0x74, 0x61, 0x6e, 0x67, 0x6c, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x0d, 0x52, 0x65, 0x63, 0x74,
	0x44, 0x61, 0x74, 0x61, 0x53, 0x6c, 0x69, 0x63, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x52, 0x65, 0x73,
	0x70, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x52, 0x65, 0x73,
	0x70, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x6c, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x70,
	0x6c, 0x65, 0x78, 0x41, 0x64, 0x76, 0x65, 0x72, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x1c, 0x0a, 0x09, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x78, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x78, 0x49, 0x64, 0x12,
	0x1a, 0x0a, 0x08, 0x50, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x08, 0x50, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x4f,
	0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x4f, 0x66, 0x66,
	0x73, 0x65, 0x74, 0x22, 0x7b, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65,
	0x78, 0x41, 0x64, 0x76, 0x65, 0x72, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x42, 0x0a, 0x0d, 0x52, 0x65, 0x63, 0x74, 0x44, 0x61, 0x74, 0x61, 0x53, 0x6c, 0x69, 0x63,
	0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x61, 0x64, 0x76, 0x65, 0x72, 0x74,
	0x73, 0x2e, 0x41, 0x64, 0x76, 0x65, 0x72, 0x74, 0x52, 0x65, 0x63, 0x74, 0x61, 0x6e, 0x67, 0x6c,
	0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x0d, 0x52, 0x65, 0x63, 0x74, 0x44, 0x61, 0x74, 0x61, 0x53,
	0x6c, 0x69, 0x63, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x43, 0x6f, 0x64, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x52, 0x65, 0x73, 0x70, 0x43, 0x6f, 0x64, 0x65,
	0x2a, 0x76, 0x0a, 0x0f, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x41, 0x72, 0x65, 0x61, 0x48, 0x6f,
	0x75, 0x73, 0x65, 0x12, 0x13, 0x0a, 0x0f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x41, 0x52,
	0x45, 0x41, 0x5f, 0x49, 0x48, 0x43, 0x10, 0x00, 0x12, 0x13, 0x0a, 0x0f, 0x53, 0x54, 0x41, 0x54,
	0x55, 0x53, 0x5f, 0x41, 0x52, 0x45, 0x41, 0x5f, 0x44, 0x4e, 0x50, 0x10, 0x01, 0x12, 0x11, 0x0a,
	0x0d, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x41, 0x52, 0x45, 0x41, 0x5f, 0x47, 0x10, 0x02,
	0x12, 0x11, 0x0a, 0x0d, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x41, 0x52, 0x45, 0x41, 0x5f,
	0x46, 0x10, 0x03, 0x12, 0x13, 0x0a, 0x0f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x41, 0x52,
	0x45, 0x41, 0x5f, 0x50, 0x53, 0x50, 0x10, 0x04, 0x2a, 0x7f, 0x0a, 0x0f, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x48, 0x6f, 0x6d, 0x65, 0x48, 0x6f, 0x75, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x10, 0x53,
	0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x48, 0x4f, 0x4d, 0x45, 0x5f, 0x4c, 0x49, 0x56, 0x45, 0x10,
	0x00, 0x12, 0x1b, 0x0a, 0x17, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x48, 0x4f, 0x4d, 0x45,
	0x5f, 0x52, 0x45, 0x50, 0x41, 0x49, 0x52, 0x5f, 0x4e, 0x45, 0x45, 0x44, 0x10, 0x01, 0x12, 0x1d,
	0x0a, 0x19, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x48, 0x4f, 0x4d, 0x45, 0x5f, 0x43, 0x4f,
	0x4d, 0x50, 0x4c, 0x45, 0x54, 0x45, 0x5f, 0x4e, 0x45, 0x45, 0x44, 0x10, 0x02, 0x12, 0x1a, 0x0a,
	0x16, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x48, 0x4f, 0x4d, 0x45, 0x5f, 0x52, 0x45, 0x4e,
	0x4f, 0x56, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x03, 0x2a, 0xad, 0x02, 0x0a, 0x10, 0x4d, 0x61,
	0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x69, 0x6e, 0x67, 0x12, 0x12,
	0x0a, 0x0e, 0x4d, 0x41, 0x54, 0x45, 0x52, 0x49, 0x41, 0x4c, 0x5f, 0x42, 0x52, 0x49, 0x43, 0x4b,
	0x10, 0x00, 0x12, 0x17, 0x0a, 0x13, 0x4d, 0x41, 0x54, 0x45, 0x52, 0x49, 0x41, 0x4c, 0x5f, 0x4d,
	0x4f, 0x4e, 0x4f, 0x4c, 0x49, 0x54, 0x48, 0x49, 0x43, 0x10, 0x01, 0x12, 0x11, 0x0a, 0x0d, 0x4d,
	0x41, 0x54, 0x45, 0x52, 0x49, 0x41, 0x4c, 0x5f, 0x57, 0x4f, 0x4f, 0x44, 0x10, 0x02, 0x12, 0x12,
	0x0a, 0x0e, 0x4d, 0x41, 0x54, 0x45, 0x52, 0x49, 0x41, 0x4c, 0x5f, 0x50, 0x41, 0x4e, 0x45, 0x4c,
	0x10, 0x03, 0x12, 0x16, 0x0a, 0x12, 0x4d, 0x41, 0x54, 0x45, 0x52, 0x49, 0x41, 0x4c, 0x5f, 0x53,
	0x54, 0x41, 0x4c, 0x49, 0x4e, 0x53, 0x4b, 0x59, 0x10, 0x04, 0x12, 0x12, 0x0a, 0x0e, 0x4d, 0x41,
	0x54, 0x45, 0x52, 0x49, 0x41, 0x4c, 0x5f, 0x42, 0x4c, 0x4f, 0x43, 0x4b, 0x10, 0x05, 0x12, 0x1d,
	0x0a, 0x19, 0x4d, 0x41, 0x54, 0x45, 0x52, 0x49, 0x41, 0x4c, 0x5f, 0x4d, 0x4f, 0x4e, 0x4f, 0x4c,
	0x49, 0x54, 0x48, 0x49, 0x43, 0x5f, 0x42, 0x4c, 0x4f, 0x43, 0x4b, 0x10, 0x06, 0x12, 0x12, 0x0a,
	0x0e, 0x4d, 0x41, 0x54, 0x45, 0x52, 0x49, 0x41, 0x4c, 0x5f, 0x46, 0x52, 0x41, 0x4d, 0x45, 0x10,
	0x07, 0x12, 0x23, 0x0a, 0x1f, 0x4d, 0x41, 0x54, 0x45, 0x52, 0x49, 0x41, 0x4c, 0x5f, 0x41, 0x45,
	0x52, 0x41, 0x54, 0x45, 0x44, 0x5f, 0x43, 0x4f, 0x4e, 0x43, 0x52, 0x45, 0x54, 0x45, 0x5f, 0x42,
	0x4c, 0x4f, 0x43, 0x4b, 0x10, 0x08, 0x12, 0x1f, 0x0a, 0x1b, 0x4d, 0x41, 0x54, 0x45, 0x52, 0x49,
	0x41, 0x4c, 0x5f, 0x47, 0x41, 0x53, 0x5f, 0x53, 0x49, 0x4c, 0x49, 0x43, 0x41, 0x54, 0x45, 0x5f,
	0x42, 0x4c, 0x4f, 0x43, 0x4b, 0x10, 0x09, 0x12, 0x20, 0x0a, 0x1c, 0x4d, 0x41, 0x54, 0x45, 0x52,
	0x49, 0x41, 0x4c, 0x5f, 0x46, 0x4f, 0x41, 0x4d, 0x5f, 0x43, 0x4f, 0x4e, 0x43, 0x52, 0x45, 0x54,
	0x45, 0x5f, 0x42, 0x4c, 0x4f, 0x43, 0x4b, 0x10, 0x0a, 0x32, 0xdf, 0x09, 0x0a, 0x07, 0x41, 0x64,
	0x76, 0x65, 0x72, 0x74, 0x73, 0x12, 0x50, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x41, 0x64, 0x76, 0x65,
	0x72, 0x74, 0x42, 0x79, 0x49, 0x64, 0x12, 0x1d, 0x2e, 0x61, 0x64, 0x76, 0x65, 0x72, 0x74, 0x73,
	0x2e, 0x47, 0x65, 0x74, 0x41, 0x64, 0x76, 0x65, 0x72, 0x74, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x61, 0x64, 0x76, 0x65, 0x72, 0x74, 0x73, 0x2e,
	0x47, 0x65, 0x74, 0x41, 0x64, 0x76, 0x65, 0x72, 0x74, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x59, 0x0a, 0x10, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x41, 0x64, 0x76, 0x65, 0x72, 0x74, 0x42, 0x79, 0x49, 0x64, 0x12, 0x20, 0x2e, 0x61, 0x64,
	0x76, 0x65, 0x72, 0x74, 0x73, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x64, 0x76, 0x65,
	0x72, 0x74, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e,
	0x61, 0x64, 0x76, 0x65, 0x72, 0x74, 0x73, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x64,
	0x76, 0x65, 0x72, 0x74, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x59, 0x0a, 0x10, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x64, 0x76, 0x65,
	0x72, 0x74, 0x42, 0x79, 0x49, 0x64, 0x12, 0x20, 0x2e, 0x61, 0x64, 0x76, 0x65, 0x72, 0x74, 0x73,
	0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x64, 0x76, 0x65, 0x72, 0x74, 0x42, 0x79, 0x49,
	0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x61, 0x64, 0x76, 0x65, 0x72,
	0x74, 0x73, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x64, 0x76, 0x65, 0x72, 0x74, 0x42,
	0x79, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x47, 0x0a,
	0x0a, 0x4c, 0x69, 0x6b, 0x65, 0x41, 0x64, 0x76, 0x65, 0x72, 0x74, 0x12, 0x1a, 0x2e, 0x61, 0x64,
	0x76, 0x65, 0x72, 0x74, 0x73, 0x2e, 0x4c, 0x69, 0x6b, 0x65, 0x41, 0x64, 0x76, 0x65, 0x72, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x61, 0x64, 0x76, 0x65, 0x72, 0x74,
	0x73, 0x2e, 0x4c, 0x69, 0x6b, 0x65, 0x41, 0x64, 0x76, 0x65, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x50, 0x0a, 0x0d, 0x44, 0x69, 0x73, 0x6c, 0x69, 0x6b,
	0x65, 0x41, 0x64, 0x76, 0x65, 0x72, 0x74, 0x12, 0x1d, 0x2e, 0x61, 0x64, 0x76, 0x65, 0x72, 0x74,
	0x73, 0x2e, 0x44, 0x69, 0x73, 0x6c, 0x69, 0x6b, 0x65, 0x41, 0x64, 0x76, 0x65, 0x72, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x61, 0x64, 0x76, 0x65, 0x72, 0x74, 0x73,
	0x2e, 0x44, 0x69, 0x73, 0x6c, 0x69, 0x6b, 0x65, 0x41, 0x64, 0x76, 0x65, 0x72, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5c, 0x0a, 0x11, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x48, 0x6f, 0x75, 0x73, 0x65, 0x41, 0x64, 0x76, 0x65, 0x72, 0x74, 0x12, 0x21, 0x2e,
	0x61, 0x64, 0x76, 0x65, 0x72, 0x74, 0x73, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x48, 0x6f,
	0x75, 0x73, 0x65, 0x41, 0x64, 0x76, 0x65, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x22, 0x2e, 0x61, 0x64, 0x76, 0x65, 0x72, 0x74, 0x73, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x48, 0x6f, 0x75, 0x73, 0x65, 0x41, 0x64, 0x76, 0x65, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x74, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x45, 0x78, 0x69,
	0x73, 0x74, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x69, 0x6e, 0x67, 0x42, 0x79, 0x41, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x12, 0x29, 0x2e, 0x61, 0x64, 0x76, 0x65, 0x72, 0x74, 0x73, 0x2e, 0x47, 0x65,
	0x74, 0x45, 0x78, 0x69, 0x73, 0x74, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x69, 0x6e, 0x67, 0x42, 0x79,
	0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a,
	0x2e, 0x61, 0x64, 0x76, 0x65, 0x72, 0x74, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x45, 0x78, 0x69, 0x73,
	0x74, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x69, 0x6e, 0x67, 0x42, 0x79, 0x41, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x59, 0x0a, 0x10,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x46, 0x6c, 0x61, 0x74, 0x41, 0x64, 0x76, 0x65, 0x72, 0x74,
	0x12, 0x20, 0x2e, 0x61, 0x64, 0x76, 0x65, 0x72, 0x74, 0x73, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x46, 0x6c, 0x61, 0x74, 0x41, 0x64, 0x76, 0x65, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x21, 0x2e, 0x61, 0x64, 0x76, 0x65, 0x72, 0x74, 0x73, 0x2e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x46, 0x6c, 0x61, 0x74, 0x41, 0x64, 0x76, 0x65, 0x72, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x65, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x53, 0x71,
	0x75, 0x61, 0x72, 0x65, 0x41, 0x64, 0x76, 0x65, 0x72, 0x74, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x12,
	0x24, 0x2e, 0x61, 0x64, 0x76, 0x65, 0x72, 0x74, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x71, 0x75,
	0x61, 0x72, 0x65, 0x41, 0x64, 0x76, 0x65, 0x72, 0x74, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x61, 0x64, 0x76, 0x65, 0x72, 0x74, 0x73, 0x2e,
	0x47, 0x65, 0x74, 0x53, 0x71, 0x75, 0x61, 0x72, 0x65, 0x41, 0x64, 0x76, 0x65, 0x72, 0x74, 0x73,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x6e,
	0x0a, 0x17, 0x47, 0x65, 0x74, 0x52, 0x65, 0x63, 0x74, 0x61, 0x6e, 0x67, 0x6c, 0x65, 0x41, 0x64,
	0x76, 0x65, 0x72, 0x74, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x27, 0x2e, 0x61, 0x64, 0x76, 0x65,
	0x72, 0x74, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x63, 0x74, 0x61, 0x6e, 0x67, 0x6c, 0x65,
	0x41, 0x64, 0x76, 0x65, 0x72, 0x74, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x28, 0x2e, 0x61, 0x64, 0x76, 0x65, 0x72, 0x74, 0x73, 0x2e, 0x47, 0x65, 0x74,
	0x52, 0x65, 0x63, 0x74, 0x61, 0x6e, 0x67, 0x6c, 0x65, 0x41, 0x64, 0x76, 0x65, 0x72, 0x74, 0x73,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5e,
	0x0a, 0x19, 0x47, 0x65, 0x74, 0x52, 0x65, 0x63, 0x74, 0x61, 0x6e, 0x67, 0x6c, 0x65, 0x41, 0x64,
	0x76, 0x65, 0x72, 0x74, 0x73, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x12, 0x1e, 0x2e, 0x61, 0x64,
	0x76, 0x65, 0x72, 0x74, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x41, 0x64, 0x76,
	0x65, 0x72, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x61, 0x64,
	0x76, 0x65, 0x72, 0x74, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x41, 0x64, 0x76,
	0x65, 0x72, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x62,
	0x0a, 0x13, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x6b, 0x65, 0x64, 0x55, 0x73, 0x65, 0x72, 0x41, 0x64,
	0x76, 0x65, 0x72, 0x74, 0x73, 0x12, 0x23, 0x2e, 0x61, 0x64, 0x76, 0x65, 0x72, 0x74, 0x73, 0x2e,
	0x47, 0x65, 0x74, 0x4c, 0x69, 0x6b, 0x65, 0x64, 0x55, 0x73, 0x65, 0x72, 0x41, 0x64, 0x76, 0x65,
	0x72, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x61, 0x64, 0x76,
	0x65, 0x72, 0x74, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x6b, 0x65, 0x64, 0x55, 0x73, 0x65,
	0x72, 0x41, 0x64, 0x76, 0x65, 0x72, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x67, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x52, 0x65, 0x63, 0x74, 0x61, 0x6e, 0x67,
	0x6c, 0x65, 0x41, 0x64, 0x76, 0x65, 0x72, 0x74, 0x73, 0x42, 0x79, 0x43, 0x6f, 0x6d, 0x70, 0x6c,
	0x65, 0x78, 0x12, 0x21, 0x2e, 0x61, 0x64, 0x76, 0x65, 0x72, 0x74, 0x73, 0x2e, 0x47, 0x65, 0x74,
	0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x78, 0x41, 0x64, 0x76, 0x65, 0x72, 0x74, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x61, 0x64, 0x76, 0x65, 0x72, 0x74, 0x73, 0x2e,
	0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x78, 0x41, 0x64, 0x76, 0x65, 0x72, 0x74,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x2f, 0x5a, 0x2d, 0x2e,
	0x2f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x61, 0x64,
	0x76, 0x65, 0x72, 0x74, 0x73, 0x2f, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x2f, 0x67,
	0x72, 0x70, 0x63, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x3b, 0x67, 0x65, 0x6e, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_advert_proto_rawDescOnce sync.Once
	file_advert_proto_rawDescData = file_advert_proto_rawDesc
)

func file_advert_proto_rawDescGZIP() []byte {
	file_advert_proto_rawDescOnce.Do(func() {
		file_advert_proto_rawDescData = protoimpl.X.CompressGZIP(file_advert_proto_rawDescData)
	})
	return file_advert_proto_rawDescData
}

var file_advert_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_advert_proto_msgTypes = make([]protoimpl.MessageInfo, 35)
var file_advert_proto_goTypes = []interface{}{
	(StatusAreaHouse)(0),                      // 0: adverts.StatusAreaHouse
	(StatusHomeHouse)(0),                      // 1: adverts.StatusHomeHouse
	(MaterialBuilding)(0),                     // 2: adverts.MaterialBuilding
	(*GetAdvertByIdRequest)(nil),              // 3: adverts.GetAdvertByIdRequest
	(*AddressData)(nil),                       // 4: adverts.AddressData
	(*ImageResp)(nil),                         // 5: adverts.ImageResp
	(*PriceChangeData)(nil),                   // 6: adverts.PriceChangeData
	(*ComplexAdvertProperties)(nil),           // 7: adverts.ComplexAdvertProperties
	(*FlatProperties)(nil),                    // 8: adverts.FlatProperties
	(*HouseProperties)(nil),                   // 9: adverts.HouseProperties
	(*GetAdvertByIdResponse)(nil),             // 10: adverts.GetAdvertByIdResponse
	(*GetRectangleAdvertsListRequest)(nil),    // 11: adverts.GetRectangleAdvertsListRequest
	(*AdvertRectangleData)(nil),               // 12: adverts.AdvertRectangleData
	(*PageInfo)(nil),                          // 13: adverts.PageInfo
	(*GetRectangleAdvertsListResponse)(nil),   // 14: adverts.GetRectangleAdvertsListResponse
	(*UpdateAdvertByIdRequest)(nil),           // 15: adverts.UpdateAdvertByIdRequest
	(*UpdateAdvertByIdResponse)(nil),          // 16: adverts.UpdateAdvertByIdResponse
	(*DeleteAdvertByIdRequest)(nil),           // 17: adverts.DeleteAdvertByIdRequest
	(*DeleteAdvertByIdResponse)(nil),          // 18: adverts.DeleteAdvertByIdResponse
	(*LikeAdvertRequest)(nil),                 // 19: adverts.LikeAdvertRequest
	(*LikeAdvertResponse)(nil),                // 20: adverts.LikeAdvertResponse
	(*DislikeAdvertRequest)(nil),              // 21: adverts.DislikeAdvertRequest
	(*DislikeAdvertResponse)(nil),             // 22: adverts.DislikeAdvertResponse
	(*CreateHouseAdvertRequest)(nil),          // 23: adverts.CreateHouseAdvertRequest
	(*CreateHouseAdvertResponse)(nil),         // 24: adverts.CreateHouseAdvertResponse
	(*GetExistBuildingByAddressRequest)(nil),  // 25: adverts.GetExistBuildingByAddressRequest
	(*GetExistBuildingByAddressResponse)(nil), // 26: adverts.GetExistBuildingByAddressResponse
	(*CreateFlatAdvertRequest)(nil),           // 27: adverts.CreateFlatAdvertRequest
	(*CreateFlatAdvertResponse)(nil),          // 28: adverts.CreateFlatAdvertResponse
	(*GetSquareAdvertsListRequest)(nil),       // 29: adverts.GetSquareAdvertsListRequest
	(*AdvertSquareData)(nil),                  // 30: adverts.AdvertSquareData
	(*GetSquareAdvertsListResponse)(nil),      // 31: adverts.GetSquareAdvertsListResponse
	(*GetUserAdvertsRequest)(nil),             // 32: adverts.GetUserAdvertsRequest
	(*GetUserAdvertsResponse)(nil),            // 33: adverts.GetUserAdvertsResponse
	(*GetLikedUserAdvertsRequest)(nil),        // 34: adverts.GetLikedUserAdvertsRequest
	(*GetLikedUserAdvertsResponse)(nil),       // 35: adverts.GetLikedUserAdvertsResponse
	(*GetComplexAdvertsRequest)(nil),          // 36: adverts.GetComplexAdvertsRequest
	(*GetComplexAdvertsResponse)(nil),         // 37: adverts.GetComplexAdvertsResponse
}
var file_advert_proto_depIdxs = []int32{
	0,  // 0: adverts.HouseProperties.StatusArea:type_name -> adverts.StatusAreaHouse
	1,  // 1: adverts.HouseProperties.StatusHome:type_name -> adverts.StatusHomeHouse
	6,  // 2: adverts.GetAdvertByIdResponse.PriceHistory:type_name -> adverts.PriceChangeData
	5,  // 3: adverts.GetAdvertByIdResponse.Images:type_name -> adverts.ImageResp
	9,  // 4: adverts.GetAdvertByIdResponse.HouseProp:type_name -> adverts.HouseProperties
	8,  // 5: adverts.GetAdvertByIdResponse.FlatProperties:type_name -> adverts.FlatProperties
	2,  // 6: adverts.GetAdvertByIdResponse.Material:type_name -> adverts.MaterialBuilding
	7,  // 7: adverts.GetAdvertByIdResponse.ComplexProperties:type_name -> adverts.ComplexAdvertProperties
	9,  // 8: adverts.AdvertRectangleData.HouseProp:type_name -> adverts.HouseProperties
	8,  // 9: adverts.AdvertRectangleData.FlatProperties:type_name -> adverts.FlatProperties
	12, // 10: adverts.GetRectangleAdvertsListResponse.Adverts:type_name -> adverts.AdvertRectangleData
	13, // 11: adverts.GetRectangleAdvertsListResponse.Info:type_name -> adverts.PageInfo
	4,  // 12: adverts.UpdateAdvertByIdRequest.Address:type_name -> adverts.AddressData
	9,  // 13: adverts.UpdateAdvertByIdRequest.HouseProp:type_name -> adverts.HouseProperties
	8,  // 14: adverts.UpdateAdvertByIdRequest.FlatProperties:type_name -> adverts.FlatProperties
	2,  // 15: adverts.UpdateAdvertByIdRequest.Material:type_name -> adverts.MaterialBuilding
	9,  // 16: adverts.CreateHouseAdvertRequest.CreateHouseProp:type_name -> adverts.HouseProperties
	2,  // 17: adverts.CreateHouseAdvertRequest.Material:type_name -> adverts.MaterialBuilding
	4,  // 18: adverts.CreateHouseAdvertRequest.Address:type_name -> adverts.AddressData
	4,  // 19: adverts.GetExistBuildingByAddressRequest.AdrData:type_name -> adverts.AddressData
	2,  // 20: adverts.GetExistBuildingByAddressResponse.Material:type_name -> adverts.MaterialBuilding
	8,  // 21: adverts.CreateFlatAdvertRequest.CreateFlatProp:type_name -> adverts.FlatProperties
	2,  // 22: adverts.CreateFlatAdvertRequest.Material:type_name -> adverts.MaterialBuilding
	4,  // 23: adverts.CreateFlatAdvertRequest.Address:type_name -> adverts.AddressData
	9,  // 24: adverts.AdvertSquareData.HouseProp:type_name -> adverts.HouseProperties
	8,  // 25: adverts.AdvertSquareData.FlatProp:type_name -> adverts.FlatProperties
	30, // 26: adverts.GetSquareAdvertsListResponse.SquareData:type_name -> adverts.AdvertSquareData
	12, // 27: adverts.GetUserAdvertsResponse.RectDataSlice:type_name -> adverts.AdvertRectangleData
	12, // 28: adverts.GetLikedUserAdvertsResponse.RectDataSlice:type_name -> adverts.AdvertRectangleData
	12, // 29: adverts.GetComplexAdvertsResponse.RectDataSlice:type_name -> adverts.AdvertRectangleData
	3,  // 30: adverts.Adverts.GetAdvertById:input_type -> adverts.GetAdvertByIdRequest
	15, // 31: adverts.Adverts.UpdateAdvertById:input_type -> adverts.UpdateAdvertByIdRequest
	17, // 32: adverts.Adverts.DeleteAdvertById:input_type -> adverts.DeleteAdvertByIdRequest
	19, // 33: adverts.Adverts.LikeAdvert:input_type -> adverts.LikeAdvertRequest
	21, // 34: adverts.Adverts.DislikeAdvert:input_type -> adverts.DislikeAdvertRequest
	23, // 35: adverts.Adverts.CreateHouseAdvert:input_type -> adverts.CreateHouseAdvertRequest
	25, // 36: adverts.Adverts.GetExistBuildingByAddress:input_type -> adverts.GetExistBuildingByAddressRequest
	27, // 37: adverts.Adverts.CreateFlatAdvert:input_type -> adverts.CreateFlatAdvertRequest
	29, // 38: adverts.Adverts.GetSquareAdvertsList:input_type -> adverts.GetSquareAdvertsListRequest
	11, // 39: adverts.Adverts.GetRectangleAdvertsList:input_type -> adverts.GetRectangleAdvertsListRequest
	32, // 40: adverts.Adverts.GetRectangleAdvertsByUser:input_type -> adverts.GetUserAdvertsRequest
	34, // 41: adverts.Adverts.GetLikedUserAdverts:input_type -> adverts.GetLikedUserAdvertsRequest
	36, // 42: adverts.Adverts.GetRectangleAdvertsByComplex:input_type -> adverts.GetComplexAdvertsRequest
	10, // 43: adverts.Adverts.GetAdvertById:output_type -> adverts.GetAdvertByIdResponse
	16, // 44: adverts.Adverts.UpdateAdvertById:output_type -> adverts.UpdateAdvertByIdResponse
	18, // 45: adverts.Adverts.DeleteAdvertById:output_type -> adverts.DeleteAdvertByIdResponse
	20, // 46: adverts.Adverts.LikeAdvert:output_type -> adverts.LikeAdvertResponse
	22, // 47: adverts.Adverts.DislikeAdvert:output_type -> adverts.DislikeAdvertResponse
	24, // 48: adverts.Adverts.CreateHouseAdvert:output_type -> adverts.CreateHouseAdvertResponse
	26, // 49: adverts.Adverts.GetExistBuildingByAddress:output_type -> adverts.GetExistBuildingByAddressResponse
	28, // 50: adverts.Adverts.CreateFlatAdvert:output_type -> adverts.CreateFlatAdvertResponse
	31, // 51: adverts.Adverts.GetSquareAdvertsList:output_type -> adverts.GetSquareAdvertsListResponse
	14, // 52: adverts.Adverts.GetRectangleAdvertsList:output_type -> adverts.GetRectangleAdvertsListResponse
	33, // 53: adverts.Adverts.GetRectangleAdvertsByUser:output_type -> adverts.GetUserAdvertsResponse
	35, // 54: adverts.Adverts.GetLikedUserAdverts:output_type -> adverts.GetLikedUserAdvertsResponse
	37, // 55: adverts.Adverts.GetRectangleAdvertsByComplex:output_type -> adverts.GetComplexAdvertsResponse
	43, // [43:56] is the sub-list for method output_type
	30, // [30:43] is the sub-list for method input_type
	30, // [30:30] is the sub-list for extension type_name
	30, // [30:30] is the sub-list for extension extendee
	0,  // [0:30] is the sub-list for field type_name
}

func init() { file_advert_proto_init() }
func file_advert_proto_init() {
	if File_advert_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_advert_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAdvertByIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_advert_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddressData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_advert_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ImageResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_advert_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PriceChangeData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_advert_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ComplexAdvertProperties); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_advert_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FlatProperties); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_advert_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HouseProperties); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_advert_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAdvertByIdResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_advert_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRectangleAdvertsListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_advert_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdvertRectangleData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_advert_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PageInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_advert_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRectangleAdvertsListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_advert_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateAdvertByIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_advert_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateAdvertByIdResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_advert_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteAdvertByIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_advert_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteAdvertByIdResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_advert_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LikeAdvertRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_advert_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LikeAdvertResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_advert_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DislikeAdvertRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_advert_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DislikeAdvertResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_advert_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateHouseAdvertRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_advert_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateHouseAdvertResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_advert_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetExistBuildingByAddressRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_advert_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetExistBuildingByAddressResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_advert_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateFlatAdvertRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_advert_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateFlatAdvertResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_advert_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSquareAdvertsListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_advert_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdvertSquareData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_advert_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSquareAdvertsListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_advert_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserAdvertsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_advert_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserAdvertsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_advert_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLikedUserAdvertsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_advert_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLikedUserAdvertsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_advert_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetComplexAdvertsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_advert_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetComplexAdvertsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_advert_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   35,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_advert_proto_goTypes,
		DependencyIndexes: file_advert_proto_depIdxs,
		EnumInfos:         file_advert_proto_enumTypes,
		MessageInfos:      file_advert_proto_msgTypes,
	}.Build()
	File_advert_proto = out.File
	file_advert_proto_rawDesc = nil
	file_advert_proto_goTypes = nil
	file_advert_proto_depIdxs = nil
}
