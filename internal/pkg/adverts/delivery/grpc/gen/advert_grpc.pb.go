// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.3.0
// - protoc             v5.26.1
// source: advert.proto

package gen

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

const (
	Adverts_GetAdvertById_FullMethodName           = "/adverts.Adverts/GetAdvertById"
	Adverts_GetRectangleAdvertsList_FullMethodName = "/adverts.Adverts/GetRectangleAdvertsList"
)

// AdvertsClient is the client API for Adverts service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type AdvertsClient interface {
	GetAdvertById(ctx context.Context, in *GetAdvertByIdRequest, opts ...grpc.CallOption) (*GetAdvertByIdResponse, error)
	// rpc UpdateAdvertById(UpdateAdvertByIdRequest) returns (UpdateAdvertByIdResponse) {}
	// rpc DeleteAdvertById(DeleteAdvertByIdRequest) returns (DeleteAdvertByIdResponse) {}
	// rpc LikeAdvert(LikeAdvertRequest) returns (LikeAdvertResponse) {}
	// rpc DislikeAdvert(DislikeAdvertRequest) returns (DislikeAdvertResponse) {}
	// rpc CreateHouseAdvert(CreateHouseAdvertRequest) returns (CreateHouseAdvertResponse) {}
	// rpc GetExistBuildingByAddress(GetExistBuildingByAddressRequest) returns (GetExistBuildingByAddressResponse) {}
	// rpc CreateFlatAdvert(CreateFlatAdvertRequest) returns (CreateFlatAdvertResponse) {}
	// rpc GetSquareAdvertsList(GetSquareAdvertsListRequest) returns (GetSquareAdvertsListResponse) {}
	GetRectangleAdvertsList(ctx context.Context, in *GetRectangleAdvertsListRequest, opts ...grpc.CallOption) (*GetRectangleAdvertsListResponse, error)
}

type advertsClient struct {
	cc grpc.ClientConnInterface
}

func NewAdvertsClient(cc grpc.ClientConnInterface) AdvertsClient {
	return &advertsClient{cc}
}

func (c *advertsClient) GetAdvertById(ctx context.Context, in *GetAdvertByIdRequest, opts ...grpc.CallOption) (*GetAdvertByIdResponse, error) {
	out := new(GetAdvertByIdResponse)
	err := c.cc.Invoke(ctx, Adverts_GetAdvertById_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *advertsClient) GetRectangleAdvertsList(ctx context.Context, in *GetRectangleAdvertsListRequest, opts ...grpc.CallOption) (*GetRectangleAdvertsListResponse, error) {
	out := new(GetRectangleAdvertsListResponse)
	err := c.cc.Invoke(ctx, Adverts_GetRectangleAdvertsList_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// AdvertsServer is the server API for Adverts service.
// All implementations must embed UnimplementedAdvertsServer
// for forward compatibility
type AdvertsServer interface {
	GetAdvertById(context.Context, *GetAdvertByIdRequest) (*GetAdvertByIdResponse, error)
	// rpc UpdateAdvertById(UpdateAdvertByIdRequest) returns (UpdateAdvertByIdResponse) {}
	// rpc DeleteAdvertById(DeleteAdvertByIdRequest) returns (DeleteAdvertByIdResponse) {}
	// rpc LikeAdvert(LikeAdvertRequest) returns (LikeAdvertResponse) {}
	// rpc DislikeAdvert(DislikeAdvertRequest) returns (DislikeAdvertResponse) {}
	// rpc CreateHouseAdvert(CreateHouseAdvertRequest) returns (CreateHouseAdvertResponse) {}
	// rpc GetExistBuildingByAddress(GetExistBuildingByAddressRequest) returns (GetExistBuildingByAddressResponse) {}
	// rpc CreateFlatAdvert(CreateFlatAdvertRequest) returns (CreateFlatAdvertResponse) {}
	// rpc GetSquareAdvertsList(GetSquareAdvertsListRequest) returns (GetSquareAdvertsListResponse) {}
	GetRectangleAdvertsList(context.Context, *GetRectangleAdvertsListRequest) (*GetRectangleAdvertsListResponse, error)
	mustEmbedUnimplementedAdvertsServer()
}

// UnimplementedAdvertsServer must be embedded to have forward compatible implementations.
type UnimplementedAdvertsServer struct {
}

func (UnimplementedAdvertsServer) GetAdvertById(context.Context, *GetAdvertByIdRequest) (*GetAdvertByIdResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAdvertById not implemented")
}
func (UnimplementedAdvertsServer) GetRectangleAdvertsList(context.Context, *GetRectangleAdvertsListRequest) (*GetRectangleAdvertsListResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetRectangleAdvertsList not implemented")
}
func (UnimplementedAdvertsServer) mustEmbedUnimplementedAdvertsServer() {}

// UnsafeAdvertsServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to AdvertsServer will
// result in compilation errors.
type UnsafeAdvertsServer interface {
	mustEmbedUnimplementedAdvertsServer()
}

func RegisterAdvertsServer(s grpc.ServiceRegistrar, srv AdvertsServer) {
	s.RegisterService(&Adverts_ServiceDesc, srv)
}

func _Adverts_GetAdvertById_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAdvertByIdRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdvertsServer).GetAdvertById(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: Adverts_GetAdvertById_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdvertsServer).GetAdvertById(ctx, req.(*GetAdvertByIdRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Adverts_GetRectangleAdvertsList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetRectangleAdvertsListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdvertsServer).GetRectangleAdvertsList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: Adverts_GetRectangleAdvertsList_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdvertsServer).GetRectangleAdvertsList(ctx, req.(*GetRectangleAdvertsListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// Adverts_ServiceDesc is the grpc.ServiceDesc for Adverts service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var Adverts_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "adverts.Adverts",
	HandlerType: (*AdvertsServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetAdvertById",
			Handler:    _Adverts_GetAdvertById_Handler,
		},
		{
			MethodName: "GetRectangleAdvertsList",
			Handler:    _Adverts_GetRectangleAdvertsList_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "advert.proto",
}
